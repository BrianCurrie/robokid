/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/gameplayManager.js":
/*!********************************!*\
  !*** ./src/gameplayManager.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gameplayManager\": () => (/* binding */ gameplayManager)\n/* harmony export */ });\n/* harmony import */ var _portrait_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portrait.js */ \"./src/portrait.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings.js */ \"./src/settings.js\");\n/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scene.js */ \"./src/scene.js\");\n/* harmony import */ var _level_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./level.js */ \"./src/level.js\");\n/* harmony import */ var _levelAtlas_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./levelAtlas.js */ \"./src/levelAtlas.js\");\n\n\n\n\n\n\n/**\n * Manages the broad aspects of the gameplay section of the game.\n */\nconst gameplayManager = (() => {\n\tconst $ = (id) => document.getElementById(id);\n\tconst _gameplayContainer = $('gameplay-container');\n\tconst _levelSelectContainer = $('level-select-container');\n\tconst _levelSelectItemsContainer = $('level-select-items');\n\tconst _dialogueContainer = $('dialogue');\n\n\tlet _levels = [];\n\n\tlet _dialogueMainText = '';\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/**\n\t * Exits level select and begins a level.\n\t * @param {number} id The id of the level to play.\n\t */\n\tfunction beginLevel(id) {\n\t\t_levels[id].begin(_levels[id]);\n\t\texitLevelSelect();\n\t}\n\n\t/**\n\t * Generates new level select html and goes to level select.\n\t */\n\tfunction finishLevel() {\n\t\tgenerateLevelSelectHtml();\n\t\tenterLevelSelect();\n\t}\n\n\t/** @function setDialogue\n\t * @summary Sets the content of the dialogue box.\n\t * @description Sets the content of the dialogue box, though if the passed\n\t * message is null it will set it as \"DIALOGUE WAS NULL\".\n\t * @author DTT\n\t * @access public\n\t * @param {string} msg The text to set.\n\t */\n\tfunction setDialogue(msg) {\n\t\t_dialogueContainer.innerText = msg || 'DIALOGUE WAS NULL';\n\t}\n\n\t/** @function setDialogue\n\t * @summary Sets the content of the dialogue box.\n\t * @description Sets the content of the dialogue box. Options include {\n\t * duration }\n\t * @param {string} msg The text to set.\n\t * @param {object} opts Extra options.\n\t */\n\tfunction setDialogue(msg, opts) {\n\t\tif (!msg) {\n\t\t\tmsg = '< Dialogue message was not set >';\n\t\t}\n\t\tif (!opts) {\n\t\t\topts = {};\n\t\t}\n\n\t\tif (opts.duration) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetDialogue(_dialogueMainText);\n\t\t\t}, opts.duration);\n\t\t} else {\n\t\t\t_dialogueMainText = msg;\n\t\t}\n\n\t\t_dialogueContainer.innerText = msg;\n\t\tconsole.log(`Set dialogue to \"${msg}\"`);\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/**\n\t * Initializes the gameplay manager.\n\t */\n\tfunction init() {\n\t\t_levels = (0,_levelAtlas_js__WEBPACK_IMPORTED_MODULE_4__.levelAtlas)();\n\t\tgenerateLevelSelectHtml();\n\n\t\tdocument.getElementById('level-select-open-button').onclick = function () {\n\t\t\tenterLevelSelect();\n\t\t};\n\n\t\tenterLevelSelect();\n\t\t_levelSelectContainer.classList.remove('level-select-open-animation');\n\t}\n\n\t/**\n\t * Generates new level selection HTML. Useful when exiting levels to update\n\t * completion status or unlocks.\n\t */\n\tfunction generateLevelSelectHtml() {\n\t\t_levelSelectItemsContainer.innerHTML = '';\n\t\t_levels.forEach((lvl) => {\n\t\t\t_levelSelectItemsContainer.appendChild(lvl.generateHtml());\n\t\t});\n\t}\n\n\t/**\n\t * Opens the level select dock.\n\t */\n\tfunction enterLevelSelect() {\n\t\t_levelSelectContainer.classList.remove('level-select-close-animation');\n\t\t_levelSelectContainer.classList.add('level-select-open-animation');\n\t}\n\n\t/**\n\t * Closes the level select dock.\n\t */\n\tfunction exitLevelSelect() {\n\t\t_levelSelectContainer.classList.remove('level-select-open-animation');\n\t\t_levelSelectContainer.classList.add('level-select-close-animation');\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n\n\treturn {\n\t\tbeginLevel,\n\t\tfinishLevel,\n\t\tsetDialogue,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/gameplayManager.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameplayManager.js */ \"./src/gameplayManager.js\");\n/* harmony import */ var _level_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./level.js */ \"./src/level.js\");\n/* harmony import */ var _levelAtlas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./levelAtlas.js */ \"./src/levelAtlas.js\");\n/* harmony import */ var _portrait_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./portrait.js */ \"./src/portrait.js\");\n/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scene.js */ \"./src/scene.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settings.js */ \"./src/settings.js\");\n/* harmony import */ var _widgets_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./widgets.js */ \"./src/widgets.js\");\n\n\n\n\n\n\n\n\n{\n\tdocument.getElementById('open-settings-button').onclick = () => {\n\t\t_settings_js__WEBPACK_IMPORTED_MODULE_5__.settings.openSettings();\n\t};\n\n\tdocument.getElementById('close-settings-button').onclick = () => {\n\t\t_settings_js__WEBPACK_IMPORTED_MODULE_5__.settings.closeSettings();\n\t};\n\n\tfor (let i = 0; i < 4; i++) {\n\t\tdocument.getElementById('animation-settings-options').children[i].onclick =\n\t\t\t() => {\n\t\t\t\t_settings_js__WEBPACK_IMPORTED_MODULE_5__.settings.setAnimationUpdateRate(i);\n\t\t\t};\n\t}\n\n\tfor (let i = 0; i < 3; i++) {\n\t\tdocument.getElementById('font-settings-options').children[i].onclick =\n\t\t\t() => {\n\t\t\t\t_settings_js__WEBPACK_IMPORTED_MODULE_5__.settings.setFontChoice(i);\n\t\t\t};\n\t}\n\n\tfor (let i = 0; i < 4; i++) {\n\t\tdocument.getElementById('dialogue-settings-options').children[i].onclick =\n\t\t\t() => {\n\t\t\t\t_settings_js__WEBPACK_IMPORTED_MODULE_5__.settings.setDialogueSpeed(i);\n\t\t\t};\n\t}\n}\n\n\n//# sourceURL=webpack://gamejam/./src/index.js?");

/***/ }),

/***/ "./src/level.js":
/*!**********************!*\
  !*** ./src/level.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Level\": () => (/* binding */ Level)\n/* harmony export */ });\n/* harmony import */ var _gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameplayManager.js */ \"./src/gameplayManager.js\");\n/* harmony import */ var _widgets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./widgets.js */ \"./src/widgets.js\");\n\n\n\n/** @class Level\n * @summary Represents a level.\n * @classdesc\tHolds all the information representing a level in the game with\n * functions to track progress through the level. Must immediately call\n * [the set function]{@link Level#set} to setup the level.\n * @author DTT\n * @param {Number} _id The Level's unique id.\n * @param {string} _title The level's title.\n * @param {string} _topic The Level's educational topic\n * @param {any} _widget An instance of the widget the Level uses.\n * @param {Array} _answers An array of answers the Level uses for progression.\n * @param {Array} _dialogue An array of strings the level uses for dialogue.\n */\nfunction Level(_id, _title, _topic, _widget, _answers, _dialogue) {\n\tlet _currentStage = 0;\n\tlet _locked = false;\n\tlet _completed = false;\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function getId\n\t * @summary Gets the Level's id.\n\t * @acess public\n\t */\n\tfunction getId() {\n\t\treturn _id;\n\t}\n\n\t/** @function isLocked\n\t * @summary Checks if the Level is locked or not.\n\t * @access public\n\t */\n\tfunction isLocked() {\n\t\treturn _locked;\n\t}\n\n\t/** @function isCompleted\n\t * @summary Checks if the Level is completed or not.\n\t * @access public\n\t */\n\tfunction isCompleted() {\n\t\treturn _completed;\n\t}\n\n\t/** @function generateHtml\n\t * @summary Generates html representing this Level as a level select block.\n\t * @access public\n\t */\n\tfunction generateHtml() {\n\t\tlet root = document.createElement('div');\n\t\troot.classList.add('level-select-item');\n\t\troot.id = `level-select-item-${_id}`;\n\n\t\tlet title = document.createElement('div');\n\t\ttitle.classList.add('level-select-item-title');\n\t\ttitle.innerText = _title;\n\n\t\tlet topic = document.createElement('div');\n\t\ttopic.classList.add('level-select-item-topic');\n\t\ttopic.innerText = _topic;\n\n\t\troot.appendChild(title);\n\t\troot.appendChild(topic);\n\n\t\tif (_completed) {\n\t\t\troot.classList.add('level-select-item-completed');\n\t\t} else if (!_locked) {\n\t\t\troot.onclick = () => {\n\t\t\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__.gameplayManager.beginLevel(_id);\n\t\t\t};\n\t\t} else {\n\t\t\troot.classList.add('level-select-item-locked');\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/** @function submit\n\t * @summary Handles answer checking and progression.\n\t * @description Checks the submission to the current stage's answer, and if\n\t * it's correct it will progress to the next stage of the level.\n\t * @access public\n\t * @param {any} submission The submission to be checked.\n\t */\n\tfunction submit(submission) {\n\t\tif (_completed) {\n\t\t\tconsole.log('This level is already complete.');\n\t\t} else if (submission == _answers[_currentStage]) {\n\t\t\t_currentStage++;\n\t\t\tif (_currentStage > _answers.length - 1) {\n\t\t\t\tfinish();\n\t\t\t} else {\n\t\t\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__.gameplayManager.setDialogue(_dialogue[_currentStage]);\n\t\t\t}\n\t\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__.gameplayManager.setDialogue('Correct answer!', { duration: 2000 });\n\t\t} else {\n\t\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__.gameplayManager.setDialogue('Wrong answer!', { duration: 2000 });\n\t\t}\n\t}\n\n\t/** @function begin\n\t * @summary Begins the level.\n\t * @description Begins the level, setting up communication with the widget and\n\t * drawing it, as well as setting the dialogue\n\t * @access public\n\t */\n\tfunction begin() {\n\t\tdocument.getElementById('gameplay-container').innerHTML = '';\n\t\t_widget.setLevel(this);\n\t\tdocument\n\t\t\t.getElementById('gameplay-container')\n\t\t\t.appendChild(_widget.generateHtml());\n\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__.gameplayManager.setDialogue(_dialogue[_currentStage]);\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function finish\n\t * @summary Finishes the level.\n\t * @description Sets the level as completed and returns to level select.\n\t * @access private\n\t */\n\tfunction finish() {\n\t\tconsole.log('Level finished.');\n\t\t_completed = true;\n\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__.gameplayManager.setDialogue(`Level ${_id} complete, good job!`);\n\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__.gameplayManager.finishLevel();\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\treturn {\n\t\tgetId,\n\t\tgenerateHtml,\n\t\tbegin,\n\t\tsubmit,\n\t};\n}\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/level.js?");

/***/ }),

/***/ "./src/levelAtlas.js":
/*!***************************!*\
  !*** ./src/levelAtlas.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"levelAtlas\": () => (/* binding */ levelAtlas)\n/* harmony export */ });\n/* harmony import */ var _level_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./level.js */ \"./src/level.js\");\n/* harmony import */ var _widgets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./widgets.js */ \"./src/widgets.js\");\n\n\n\n/**\n * The levelAtlas function generates all of the level data for the game.\n * This is where levels are created.\n */\nfunction levelAtlas() {\n\t/*\n\tA new level is created by:\n\t\n\t1. Calling \"new level()\" to construct a new level object.\n\t2. Calling \"set()\" on the newly constructed level. See the set function\n\tdocumentation for more details.\n\t3. Pushing the new level into the \"levels\" variable.\n\n\tThis can be short-cut into a condensed single-line call as illustrated in the\n\texample below - levels.push(new level().set({}));\n\t\n\tAn example (you may copy-paste this, it does work):\n\n\t\t// Example Level\n\t\t// Example Title - Example Topic\n\t\tlevels.push(new level().set({\n\t\t\tid: 0,\n\t\t\ttitle: 'Example Title',\n\t\t\ttopic: 'Example Topic',\n\t\t\twidget: new exampleWidget(),\n\t\t\tprogressionRequirements: ['a', 'b', 'c']\n\t\t}));\n\n\t */\n\n\tlet levels = [];\n\n\t// Example Level\n\t// Example Title - Example Topic\n\t//levels.push(\n\t//\tnew Level().set({\n\t//\t\tid: 0,\n\t//\t\ttitle: 'Example Title',\n\t//\t\ttopic: 'Example Topic',\n\t//\t\twidget: new exampleWidget(),\n\t//\t\tprogressionRequirements: ['Apple', 'Bee', 'Cat'],\n\t//\t\tdialogue: [\n\t//\t\t\t'The first stage\\'s dialogue. The answer is \"Apple\"',\n\t//\t\t\t'Second dialogue, answer is \"Bee\"',\n\t//\t\t\t'Third, \"Cat\"',\n\t//\t\t],\n\t//\t})\n\t//);\n\t//levels.push(\n\t//\tnew Level().set(\n\t//\t\t0,\n\t//\t\t'Example Title',\n\t//\t\t'Example Topic',\n\t//\t\tnew exampleWidget(),\n\t//\t\t['Apple', 'Bee', 'Cat'],\n\t//\t\t[\n\t//\t\t\t'The first stage\\'s dialogue. The answer is \"Apple\"',\n\t//\t\t\t'Second dialogue, answer is \"Bee\"',\n\t//\t\t\t'Third, \"Cat\"',\n\t//\t\t]\n\t//\t)\n\t//);\n\tlevels.push(\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\n\t\t\t0,\n\t\t\t'Example Title',\n\t\t\t'Example Topic',\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.exampleWidget(),\n\t\t\t['Apple', 'Bee', 'Cat'],\n\t\t\t[\n\t\t\t\t'The first stage\\'s dialogue. The answer is \"Apple\"',\n\t\t\t\t'Second dialogue, answer is \"Bee\"',\n\t\t\t\t'Third, \"Cat\"',\n\t\t\t]\n\t\t)\n\t);\n\n\treturn levels;\n}\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/levelAtlas.js?");

/***/ }),

/***/ "./src/portrait.js":
/*!*************************!*\
  !*** ./src/portrait.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"portrait\": () => (/* binding */ portrait)\n/* harmony export */ });\nconst portrait = (() => {\n\tconst anchor = document.getElementById('portrait-container');\n\tlet bones = [];\n\tlet images = [];\n\tlet trackers = [];\n\n\t/* ----------------- */\n\t/* PUBLIC FUNCTIONS */\n\t/* ----------------- */\n\n\t/**\n\t * Initializes bone tracking.\n\t * Bone tracking is set for each bone and image using the private trackBone\n\t * function.\n\t * @param {number} interval How frequently image position should update\n\t * (1000/30 = 30 fps, etc).\n\t */\n\tconst initBoneTracking = (interval) => {\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tclearInterval(trackers[i]);\n\t\t\ttrackers[i] = setInterval(() => {\n\t\t\t\ttrackBone(i);\n\t\t\t}, interval);\n\t\t}\n\t\tconsole.log(`Bone tracking initialized with interval of ${interval}`);\n\t};\n\n\t/**\n\t * Enables bone animation.\n\t * Adds the \"animated\" css class to each bone div.\n\t */\n\tconst enableAnimations = function () {\n\t\tbones.forEach((bone) => {\n\t\t\tbone.classList.add('animated');\n\t\t});\n\t};\n\n\t/**\n\t * Disables bone animation.\n\t * Removes the \"animated\" css class to each bone div.\n\t */\n\tconst disableAnimations = function () {\n\t\tbones.forEach((bone) => {\n\t\t\tbone.classList.remove('animated');\n\t\t});\n\t};\n\n\t/* ----------------- */\n\t/* PRIVATE FUNCTIONS */\n\t/* ----------------- */\n\n\t/**\n\t * Initializes the portrait object.\n\t * Grabs all the bone divs and images, then initiates bone tracking.\n\t * @access private\n\t */\n\tconst init = function () {\n\t\tbones[0] = document.getElementById('bone-wheels');\n\t\tbones[1] = document.getElementById('bone-body-tube');\n\t\tbones[2] = document.getElementById('bone-chest');\n\t\tbones[3] = document.getElementById('bone-right-arm');\n\t\tbones[4] = document.getElementById('bone-right-hand');\n\t\tbones[5] = document.getElementById('bone-left-arm');\n\t\tbones[6] = document.getElementById('bone-left-hand');\n\t\tbones[7] = document.getElementById('bone-head');\n\t\tbones[8] = document.getElementById('bone-face');\n\n\t\timages[0] = document.getElementById('img-wheels');\n\t\timages[1] = document.getElementById('img-body-tube');\n\t\timages[2] = document.getElementById('img-chest');\n\t\timages[3] = document.getElementById('img-right-arm');\n\t\timages[4] = document.getElementById('img-right-hand');\n\t\timages[5] = document.getElementById('img-left-arm');\n\t\timages[6] = document.getElementById('img-left-hand');\n\t\timages[7] = document.getElementById('img-head');\n\t\timages[8] = document.getElementById('img-face');\n\n\t\tinitBoneTracking(1000 / 60);\n\t};\n\n\t/**\n\t * Tracks an image to it's bone.\n\t * Adjusts the image to match it's bone's relevant transform styles.\n\t * @param {number} id The ID of the bone / image to adjust.\n\t * @access private\n\t */\n\tconst trackBone = (id) => {\n\t\timages[id].style.transform = getComputedStyle(bones[id]).getPropertyValue(\n\t\t\t'transform'\n\t\t);\n\t\timages[id].style.transformOrigin = getComputedStyle(\n\t\t\tbones[id]\n\t\t).getPropertyValue('transformOrigin');\n\t\timages[id].style.left =\n\t\t\tbones[id].getBoundingClientRect().left -\n\t\t\tanchor.getBoundingClientRect().left;\n\t\timages[id].style.top =\n\t\t\tbones[id].getBoundingClientRect().top -\n\t\t\tanchor.getBoundingClientRect().top;\n\t};\n\n\t/* -------- */\n\t/* FINALIZE */\n\t/* -------- */\n\n\tinit();\n\n\treturn {\n\t\tinitBoneTracking,\n\t\tenableAnimations,\n\t\tdisableAnimations,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/portrait.js?");

/***/ }),

/***/ "./src/scene.js":
/*!**********************!*\
  !*** ./src/scene.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst actor = function () {\n\tconst MAXPOS_LEFT = 0 + 16;\n\tconst MAXPOS_RIGHT = 672 - 48;\n\n\tlet _element = null;\n\tlet _posx = 0;\n\tlet _posy = 0;\n\tlet _facing = 1;\n\n\tlet _action = null;\n\n\t/* ---------------- */\n\t/* PUBLIC FUNCTIONS */\n\t/* ---------------- */\n\n\t/**\n\t * Set the element that this actor controls.\n\t * @param {HTMLElement} element The element this actor controls.\n\t */\n\tfunction setElement(element) {\n\t\t_element = element;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Starts the actor's behaviour.\n\t * @param {number} interval The interval in milliseconds at which the element\n\t * is updated (ie. 1000/60 is 60fps). see updateLoop function.\n\t */\n\tfunction commence(interval) {\n\t\t_posx = Math.round(MAXPOS_LEFT + Math.random() * MAXPOS_RIGHT);\n\t\tupdateLoop(interval);\n\t\tactionLoop();\n\t\treturn this;\n\t}\n\n\t/* ----------------- */\n\t/* PRIVATE FUNCTIONS */\n\t/* ----------------- */\n\n\t/**\n\t * The actor's update loop.\n\t * Each iteration of the update loop updates the actor's element's transforms\n\t * to match the actor's transforms.\n\t * @param {number} interval The interval in milliseconds at which the element\n\t * is updated (ie. 1000/60 is 60fps).\n\t */\n\tfunction updateLoop(interval) {\n\t\t_element.style.transform = `translate(${_posx}px, ${_posy}px) scaleX(${_facing})`;\n\t\tsetTimeout(() => {\n\t\t\tupdateLoop();\n\t\t}, interval);\n\t}\n\n\t/**\n\t * The actor's action loop.\n\t * The action loop provides the actor with a variety of randomly chosen\n\t * actions, creating transformations for it to use.\n\t * TODO: Would like to have a non-random action queue in the future.\n\t */\n\tfunction actionLoop() {\n\t\tclearInterval(_action);\n\n\t\tswitch (Math.round(Math.random() * 2)) {\n\t\t\tcase 0: // Do nothing.\n\t\t\t\tbreak;\n\t\t\tcase 1: // Move action.\n\t\t\t\t_facing = Math.random() < 0.5 ? 1 : -1;\n\t\t\t\tmoveAction();\n\t\t\t\tbreak;\n\t\t\tcase 2: // Jump action.\n\t\t\t\tjumpAction();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tsetTimeout(function () {\n\t\t\tactionLoop();\n\t\t}, 500 + Math.random() * 1500);\n\t}\n\n\t/**\n\t * Moves the actor left or right at a random speed.\n\t */\n\tfunction moveAction() {\n\t\t_action = setInterval(function () {\n\t\t\tif (_posx < MAXPOS_LEFT) {\n\t\t\t\t_posx = MAXPOS_LEFT;\n\t\t\t\tclearInterval(_action);\n\t\t\t\treturn;\n\t\t\t} else if (_posx > MAXPOS_RIGHT) {\n\t\t\t\t_posx = MAXPOS_RIGHT;\n\t\t\t\tclearInterval(_action);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_posx += _facing;\n\t\t}, 15 + Math.random() * 10);\n\t}\n\n\t/**\n\t * Makes the actor jump.\n\t */\n\tfunction jumpAction() {\n\t\t_action = setInterval(function () {\n\t\t\tif (_posy > -16) {\n\t\t\t\t_posy -= 2;\n\t\t\t} else {\n\t\t\t\tclearInterval(_action);\n\t\t\t\t_action = setInterval(() => {\n\t\t\t\t\tif (_posy < 0) {\n\t\t\t\t\t\t_posy += 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearInterval(_action);\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t}\n\t\t}, 1);\n\t}\n\n\t/* -------- */\n\t/* FINALIZE */\n\t/* -------- */\n\n\treturn {\n\t\tsetElement,\n\t\tcommence,\n\t};\n};\n\nconst scene = (() => {\n\tlet updateRate = 1000 / 60;\n\n\tlet actors = [];\n\n\t/* ----------------- */\n\t/* PRIVATE FUNCTIONS */\n\t/* ----------------- */\n\n\t/**\n\t * Initializes the scene.\n\t * Currently hard-coded.\n\t */\n\tconst init = () => {\n\t\tactors.push(\n\t\t\tnew actor()\n\t\t\t\t.setElement(document.getElementById('robokid'))\n\t\t\t\t.commence(updateRate)\n\t\t);\n\t\tactors.push(\n\t\t\tnew actor()\n\t\t\t\t.setElement(document.getElementById('kid1'))\n\t\t\t\t.commence(updateRate)\n\t\t);\n\t\tactors.push(\n\t\t\tnew actor()\n\t\t\t\t.setElement(document.getElementById('kid2'))\n\t\t\t\t.commence(updateRate)\n\t\t);\n\t\tactors.push(\n\t\t\tnew actor()\n\t\t\t\t.setElement(document.getElementById('kid3'))\n\t\t\t\t.commence(updateRate)\n\t\t);\n\t};\n\n\t/* -------- */\n\t/* FINALIZE */\n\t/* -------- */\n\n\tinit();\n\n\treturn undefined;\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n\tscene,\n\tactor,\n});\n\n\n//# sourceURL=webpack://gamejam/./src/scene.js?");

/***/ }),

/***/ "./src/settings.js":
/*!*************************!*\
  !*** ./src/settings.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"settings\": () => (/* binding */ settings)\n/* harmony export */ });\n/* harmony import */ var _portrait_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portrait.js */ \"./src/portrait.js\");\n\n\nconst settings = (() => {\n\t/* -------------- */\n\t/* PUBLIC METHODS */\n\t/* -------------- */\n\n\t/**\n\t * Opens the settings window.\n\t * Sets the settings window's display style to \"\";\n\t */\n\tconst openSettings = () => {\n\t\tdocument.getElementById('settings-container').style.display = '';\n\t};\n\n\t/**\n\t * Closes the settings window.\n\t * Sets the settings window's display style to \"none\";\n\t */\n\tconst closeSettings = () => {\n\t\tdocument.getElementById('settings-container').style.display = 'none';\n\t};\n\n\t/**\n\t * Sets the animation update rate.\n\t * Limiting the animation update rate could help with potential performance\n\t * issues. In the case of disabling animation, it does not completely stop any\n\t * bone tracking since stopping it outright will make the image positions not\n\t * match the bone's default state, so Number.MAX_SAFE_INTEGER is used as the\n\t * update interval.\n\t * @param {number} setting 0, 1, 2, or 3 corrosponding to \"Off\", \"10fps\", \"30fps\",\n\t * and \"Unlimited\" respectively.\n\t */\n\tconst setAnimationUpdateRate = (setting) => {\n\t\tswitch (setting) {\n\t\t\tcase 0:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_0__.portrait.disableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_0__.portrait.initBoneTracking(Number.MAX_SAFE_INTEGER);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_0__.portrait.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_0__.portrait.initBoneTracking(1000 / 10);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_0__.portrait.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_0__.portrait.initBoneTracking(1000 / 30);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_0__.portrait.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_0__.portrait.initBoneTracking(1);\n\t\t\t\tbreak;\n\t\t}\n\t\tdocument\n\t\t\t.getElementById('animation-settings-options')\n\t\t\t.children[0].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('animation-settings-options')\n\t\t\t.children[1].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('animation-settings-options')\n\t\t\t.children[2].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('animation-settings-options')\n\t\t\t.children[3].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('animation-settings-options')\n\t\t\t.children[setting].classList.add('selected');\n\t};\n\n\t/**\n\t * Sets the font choice.\n\t * VT323 is the pixelated font of choice which fits the game nicely. Open Sans\n\t * is an easy to read and modern looking font. Open Dyslexic is a font\n\t * optimized for users with dyslexia.\n\t * @param {number} setting 0, 1, or 2 corrosponding to \"VT323\", \"Open Sans\", and\n\t * \"Open Dyslexic\" respectively.\n\t */\n\tconst setFontChoice = (setting) => {\n\t\tswitch (setting) {\n\t\t\tcase 0: // Pixel\n\t\t\t\tdocument.body.classList.remove('font-standard');\n\t\t\t\tdocument.body.classList.remove('font-dyslexic');\n\t\t\t\tdocument.body.classList.add('font-pixel');\n\t\t\t\tbreak;\n\t\t\tcase 1: // Standard\n\t\t\t\tdocument.body.classList.remove('font-pixel');\n\t\t\t\tdocument.body.classList.remove('font-dyslexic');\n\t\t\t\tdocument.body.classList.add('font-standard');\n\t\t\t\tbreak;\n\t\t\tcase 2: // Dyslexic\n\t\t\t\tdocument.body.classList.remove('font-pixel');\n\t\t\t\tdocument.body.classList.remove('font-standard');\n\t\t\t\tdocument.body.classList.add('font-dyslexic');\n\t\t\t\tbreak;\n\t\t}\n\t\tdocument\n\t\t\t.getElementById('font-settings-options')\n\t\t\t.children[0].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('font-settings-options')\n\t\t\t.children[1].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('font-settings-options')\n\t\t\t.children[2].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('font-settings-options')\n\t\t\t.children[setting].classList.add('selected');\n\t};\n\n\t/**\n\t * Sets the dialogue speed.\n\t * Dialogue text is not set up yet, so no particular values have been decided\n\t * on.\n\t * @param {number} setting 0, 1, 2, or 3 corrosponding to \"Off\", \"Slow\", \"Mid\",\n\t * and \"Fast\" respectively.\n\t */\n\tconst setDialogueSpeed = (setting) => {\n\t\tconsole.log('Dialogue speed set to ' + setting);\n\t\tdocument\n\t\t\t.getElementById('dialogue-settings-options')\n\t\t\t.children[0].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('dialogue-settings-options')\n\t\t\t.children[1].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('dialogue-settings-options')\n\t\t\t.children[2].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('dialogue-settings-options')\n\t\t\t.children[3].classList.remove('selected');\n\t\tdocument\n\t\t\t.getElementById('dialogue-settings-options')\n\t\t\t.children[setting].classList.add('selected');\n\t};\n\n\t/* -------- */\n\t/* FINALIZE */\n\t/* -------- */\n\n\treturn {\n\t\topenSettings,\n\t\tcloseSettings,\n\t\tsetAnimationUpdateRate,\n\t\tsetFontChoice,\n\t\tsetDialogueSpeed,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/settings.js?");

/***/ }),

/***/ "./src/widgets.js":
/*!************************!*\
  !*** ./src/widgets.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exampleWidget\": () => (/* binding */ exampleWidget)\n/* harmony export */ });\n/*\n * All widgets must have the following:\n *\n * 1. A setLevel() function - When a level object is created, a widget is\n * assigned to it, and in the process it must tell the widget what it is so that\n * the widget may call it's submit() function for progression through the level.\n *\n * 2. A generateHtml() function - When a level object is selected by the\n * gameplayManager and the player is moved to the gameplay state, this function\n * is called by the level to generate the html it requires to run.\n *\n * 3. A call to their level's submit() function - This is how the\n * widget communicates information to the level. It can be of any type and is\n * expected to match the individual values set to the level's progression\n * requirements when it's made to progress through the stages of the level, and\n * ultimately to complete it.\n */\n\nconst exampleWidget = function () {\n\tlet _level = null;\n\n\t/**\n\t * Sets the widget's owner level.\n\t * @param {any} level The owner level.\n\t */\n\tfunction setLevel(level) {\n\t\t_level = level;\n\t}\n\n\t/**\n\t * Generates the html of the widget. Used by it's owner level.\n\t */\n\tfunction generateHtml() {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.id = 'example-widget-container';\n\n\t\tconst inputField = document.createElement('input');\n\t\tinputField.id = 'example-widget-input-field';\n\n\t\tconst submitButton = document.createElement('div');\n\t\tsubmitButton.id = 'example-widget-submit-button';\n\t\tsubmitButton.innerText = 'Submit';\n\t\tsubmitButton.onclick = () => {\n\t\t\tsubmit();\n\t\t};\n\n\t\tcontainer.appendChild(inputField);\n\t\tcontainer.appendChild(submitButton);\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Submits the input field's data to the level to attempt progression.\n\t */\n\tfunction submit() {\n\t\tconst submission = document.getElementById(\n\t\t\t'example-widget-input-field'\n\t\t).value;\n\t\t_level.submit(submission);\n\t}\n\n\treturn {\n\t\tgenerateHtml,\n\t\tsetLevel,\n\t};\n};\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/widgets.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;