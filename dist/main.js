/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/DialogueManager.js":
/*!********************************!*\
  !*** ./src/DialogueManager.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DialogueManager\": () => (/* binding */ DialogueManager)\n/* harmony export */ });\n/** @constant DialogueManager\n * @summary Manages the dialogue box.\n * @author DTT\n */\nconst DialogueManager = (() => {\n\tconst _container = document.getElementById('dialogue');\n\tlet _messageQueue = [];\n\tlet _displayMessageTimerId = null;\n\tlet _flashingMessageTimerId = null;\n\tlet _textCrawlEnabled = true;\n\tlet _textCrawlInterval = 40;\n\tlet _speechEnabled = false; //Default off for dev\n\tlet _speechRate = 1;\n\tlet _voices = null;\n\tlet _voiceId = null;\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function enqueue\n\t * @summary Enqueue some message(s) to the dialogue queue.\n\t * @access public\n\t * @param {string|Array} msg The message or messages to queue, as a single\n\t * string or an array of strings.\n\t */\n\tfunction enqueue(msg) {\n\t\tconst displayImmediately = _messageQueue.length == 0;\n\n\t\tif (typeof msg == 'string') {\n\t\t\t_messageQueue.push(msg);\n\t\t}\n\n\t\tif (Array.isArray(msg)) {\n\t\t\tmsg.forEach((msg) => {\n\t\t\t\t_messageQueue.push(msg);\n\t\t\t});\n\t\t}\n\n\t\tif (displayImmediately) {\n\t\t\tdisplayFrontmostQueuedMessage();\n\t\t}\n\t}\n\n\t/** @function flashMessage\n\t * @summary Flashes a message temporarily.\n\t * @access public\n\t * @param {string} message The message to flash\n\t * @param {number} duration The duration in milliseconds to show it.\n\t */\n\tfunction flashMessage(message, duration) {\n\t\tif (_flashingMessageTimerId != null) {\n\t\t\tclearTimeout(_flashingMessageTimerId);\n\t\t\t_flashingMessageTimerId = null;\n\t\t}\n\n\t\tif (typeof message == 'string') {\n\t\t\tdisplayMessage(message);\n\t\t\t_flashingMessageTimerId = setTimeout(() => {\n\t\t\t\t_flashingMessageTimerId = null;\n\t\t\t\tdisplayFrontmostQueuedMessage();\n\t\t\t}, duration);\n\t\t}\n\t}\n\n\t/** @function enableTextCrawl\n\t * @summary Enables text crawl.\n\t * @access public\n\t */\n\tfunction enableTextCrawl() {\n\t\t_textCrawlEnabled = true;\n\t}\n\n\t/** @function disableTextCrawl\n\t * @summary Disables text crawl.\n\t * @access public\n\t */\n\tfunction disableTextCrawl() {\n\t\t_textCrawlEnabled = false;\n\t}\n\n\t/** @function setTextSpeed\n\t * @summary Set the text reveal interval.\n\t * @access public\n\t * @param {number} interval\n\t */\n\tfunction setTextCrawlSpeed(interval) {\n\t\t_textCrawlInterval = interval;\n\t}\n\n\t/** @function enableSpeech\n\t * @summary Enables text-to-speech.\n\t * @access public\n\t */\n\tfunction enableSpeech() {\n\t\t_speechEnabled = true;\n\t}\n\n\t/** @function disableSpeech\n\t * @summary Disables text-to-speech.\n\t * @access public\n\t */\n\tfunction disableSpeech() {\n\t\t_speechEnabled = false;\n\t}\n\n\t/** @function setVoiceRate\n\t * @summary Set the voice speech rate.\n\t * @access public\n\t * @param {number} interval\n\t */\n\tfunction setSpeechRate(rate) {\n\t\t_speechRate = rate;\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the dialogue manager.\n\t * @access private\n\t */\n\tfunction init() {\n\t\t_container.onclick = () => progressDialogue();\n\n\t\tspeechSynthesis.addEventListener('voiceschanged', () => {\n\t\t\t_voices = speechSynthesis.getVoices();\n\t\t\tif (_voices.length >= 5) {\n\t\t\t\t_voiceId = 4;\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @function progressDialogue\n\t * @summary Progresses dialogue queue to the next message.\n\t * @access private\n\t */\n\tfunction progressDialogue() {\n\t\tif (_messageQueue.length > 1 && _flashingMessageTimerId == null) {\n\t\t\t_messageQueue = _messageQueue.splice(1, _messageQueue.length);\n\t\t\tdisplayFrontmostQueuedMessage();\n\t\t}\n\t}\n\n\t/** @function displayFrontmostQueuedMessage\n\t * @summary Displays the frontmost message in the queue.\n\t * @description Does not remove the message from the queue unlike {@link\n\t * DialogueManager#progressDialogue}.\n\t * @access private\n\t */\n\tfunction displayFrontmostQueuedMessage() {\n\t\tif (_flashingMessageTimerId == null) {\n\t\t\tdisplayMessage(_messageQueue[0], _textCrawlInterval);\n\t\t}\n\t}\n\n\t/** @function displayMessage\n\t * @summary Displays a message.\n\t * @description Reveals a message letter by letter into the dialogue box.\n\t * @access private\n\t * @param {string} message The message to display\n\t * @param {number} interval The interval in milliseconds between each letter\n\t * being written.\n\t * @param {number} index Don't set. Used internally, default is 0;\n\t */\n\tfunction displayMessage(message, interval, index = 0) {\n\t\tif (_textCrawlEnabled) {\n\t\t\tif (index == 0) {\n\t\t\t\t_container.innerText = '';\n\t\t\t\tclearTimeout(_displayMessageTimerId);\n\t\t\t\t_displayMessageTimerId = null;\n\t\t\t\tspeak(message);\n\t\t\t}\n\t\t\tif (index < message.length) {\n\t\t\t\t_container.append(message[index++]);\n\t\t\t\t_displayMessageTimerId = setTimeout(() => {\n\t\t\t\t\tdisplayMessage(message, interval, index);\n\t\t\t\t}, interval);\n\t\t\t}\n\t\t} else {\n\t\t\t_container.innerText = message;\n\t\t\tspeak(message);\n\t\t}\n\t}\n\n\t/** @function speak\n\t * @summary Makes the text-to-speak engine say something.\n\t * @access private\n\t * @param {string} message\n\t */\n\tfunction speak(message) {\n\t\tif (_speechEnabled) {\n\t\t\tif (speechSynthesis.speaking) {\n\t\t\t\tspeechSynthesis.cancel();\n\t\t\t}\n\t\t\tconsole.log('should speak');\n\t\t\tconst ssu = new SpeechSynthesisUtterance();\n\t\t\tif (_voiceId != null) {\n\t\t\t\tssu.voice = _voices[_voiceId];\n\t\t\t}\n\t\t\tssu.text = message;\n\t\t\tssu.rate = _speechRate;\n\t\t\tssu.pitch = 2;\n\t\t\tspeechSynthesis.speak(ssu);\n\t\t}\n\t}\n\n\t/** @function flushMessageQueue\n\t * @summary Removes all messages from the queue and empties the dialogue box.\n\t * @access private\n\t */\n\tfunction flushMessageQueue() {\n\t\t_messageQueue = [];\n\t\tif (_flashingMessageTimerId == null) {\n\t\t\tdisplayMessage('', 0, 0);\n\t\t}\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n\n\treturn {\n\t\tenqueue,\n\t\tflashMessage,\n\t\tflushMessageQueue,\n\t\tenableTextCrawl,\n\t\tdisableTextCrawl,\n\t\tenableSpeech,\n\t\tdisableSpeech,\n\t\tsetTextCrawlSpeed,\n\t\tsetSpeechRate,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/DialogueManager.js?");

/***/ }),

/***/ "./src/GameInfoManager.js":
/*!********************************!*\
  !*** ./src/GameInfoManager.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameInfoManager\": () => (/* binding */ GameInfoManager)\n/* harmony export */ });\nconst GameInfoManager = (() => {\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the game info manager.\n\t * @access private\n\t */\n\tfunction init() {\n\t\tsetOnclicks();\n\t}\n\n\t/** @function setOnclicks\n\t * @summary Sets all required onclicks.\n\t * @access private\n\t */\n\tfunction setOnclicks() {\n\t\tconst $ = (id) => document.getElementById(id);\n\n\t\t$('open-game-info-button').onclick = () => {\n\t\t\topenGameInfo();\n\t\t};\n\n\t\t$('close-game-info-button').onclick = () => {\n\t\t\tcloseGameInfo();\n\t\t};\n\t}\n\n\t/** @function openGameInfo\n\t * @summary Opens the game info window.\n\t * @access private\n\t */\n\tfunction openGameInfo() {\n\t\tdocument.getElementById('game-info-container').style.display = '';\n\t}\n\n\t/** @function closeGameInfo\n\t * @summary Closes the game info window.\n\t * @access private\n\t */\n\tfunction closeGameInfo() {\n\t\tdocument.getElementById('game-info-container').style.display = 'none';\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/GameInfoManager.js?");

/***/ }),

/***/ "./src/gameplayManager.js":
/*!********************************!*\
  !*** ./src/gameplayManager.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameplayManager\": () => (/* binding */ GameplayManager)\n/* harmony export */ });\n/* harmony import */ var _levelAtlas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./levelAtlas.js */ \"./src/levelAtlas.js\");\n/* harmony import */ var _DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DialogueManager.js */ \"./src/DialogueManager.js\");\n\n\n\n/** @constant GameplayManager\n * @summary Manages most communication between gameplay and other systems.\n * @author DTT\n */\nconst GameplayManager = (() => {\n\tconst $ = (id) => document.getElementById(id);\n\tconst _gameplayContainer = $('gameplay-container');\n\tconst _levelSelectContainer = $('level-select-container');\n\tconst _levelSelectItemsContainer = $('level-select-items');\n\tconst _levelInfoContainer = $('level-info-container');\n\n\tlet _levels = [];\n\n\tlet _dialogueMainText = '';\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function beginLevel\n\t * @summary Exits level select and beginds a level.\n\t * @access public\n\t * @param {number} id The id of the level to begin.\n\t */\n\tfunction beginLevel(id) {\n\t\texitLevelSelect();\n\t\tif (_levels[id].isFirstEntry()) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tenterLevelInfo();\n\t\t\t}, 1000);\n\t\t}\n\t\t_levels[id].begin(_levels[id]);\n\t}\n\n\t/** @function finishLevel\n\t * @summary Returns to level select.\n\t * @description Generates new level select html and goes to level select.\n\t * @access public\n\t */\n\tfunction finishLevel() {\n\t\tgenerateLevelSelectHtml();\n\t\tenterLevelSelect();\n\t}\n\n\t/** @function resetLevel\n\t * @summary Resets the level to it's initial state as per levelAtlas.\n\t * @param {number} id The level's id to reset.\n\t */\n\tfunction resetLevel(id) {\n\t\t_levels[id] = (0,_levelAtlas_js__WEBPACK_IMPORTED_MODULE_0__.levelAtlas)()[id];\n\t}\n\n\t/** @function setDialogue\n\t * @summary Sets the content of the dialogue box.\n\t * @description Sets the content of the dialogue box. Options include {\n\t * duration }\n\t * @access public\n\t * @param {string} msg The text to set.\n\t * @param {object} opts Extra options.\n\t */\n\tfunction setDialogue(msg, opts) {\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__.DialogueManager.setDialogue(msg, opts);\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the gameplay manager.\n\t * @description Grabs the level atlas and readies level select.\n\t * @access private\n\t */\n\tfunction init() {\n\t\t_levels = (0,_levelAtlas_js__WEBPACK_IMPORTED_MODULE_0__.levelAtlas)();\n\t\tgenerateLevelSelectHtml();\n\n\t\tdocument.getElementById('level-select-open-button').onclick = function () {\n\t\t\tenterLevelSelect();\n\t\t};\n\t\tdocument.getElementById('level-info-open-button').onclick = function () {\n\t\t\tenterLevelInfo();\n\t\t};\n\t\tdocument.getElementById('level-info-return-button').onclick = function () {\n\t\t\texitLevelInfo();\n\t\t};\n\n\t\tenterLevelSelect();\n\t\t_levelSelectContainer.classList.remove('level-select-open-animation');\n\t}\n\n\t/** @function generateLevelSelectHtml\n\t * @summary Generates new level select HTML.\n\t * @access private\n\t */\n\tfunction generateLevelSelectHtml() {\n\t\t_levelSelectItemsContainer.innerHTML = '';\n\t\t_levels.forEach((lvl) => {\n\t\t\t_levelSelectItemsContainer.appendChild(lvl.generateHtml());\n\t\t});\n\t}\n\n\t/** @function enterLevelSelect\n\t * @summary Opens the level select dock.\n\t * @access private\n\t */\n\tfunction enterLevelSelect() {\n\t\t_levelSelectContainer.className = '';\n\t\t_levelSelectContainer.classList.add('level-select-open-animation');\n\t\t_levelInfoContainer.className = '';\n\t\t_levelInfoContainer.classList.add('level-info-hide-animation');\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__.DialogueManager.flushMessageQueue();\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__.DialogueManager.enqueue('Select a level to play.');\n\t}\n\n\t/** @function exitLevelSelect\n\t * @summary Closes the level select dock.\n\t * @access private\n\t */\n\tfunction exitLevelSelect() {\n\t\t_levelSelectContainer.className = '';\n\t\t_levelSelectContainer.classList.add('level-select-close-animation');\n\t\t_levelInfoContainer.className = '';\n\t\t_levelInfoContainer.classList.add('level-info-reveal-animation');\n\t}\n\n\t/** @function enterLevelInfo\n\t * @summary Opens the level info dock.\n\t * @access private\n\t */\n\tfunction enterLevelInfo() {\n\t\t_levelInfoContainer.className = '';\n\t\t_levelInfoContainer.classList.add('level-info-open-animation');\n\t\t_levelSelectContainer.className = '';\n\t\t_levelSelectContainer.classList.add('level-select-hide-animation');\n\t}\n\n\t/** @function exitLevelInfo\n\t * @summary Closes the level info dock.\n\t * @access private\n\t */\n\tfunction exitLevelInfo() {\n\t\t_levelInfoContainer.className = '';\n\t\t_levelInfoContainer.classList.add('level-info-close-animation');\n\t\t_levelSelectContainer.className = '';\n\t\t_levelSelectContainer.classList.add('level-select-reveal-animation');\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n\n\treturn {\n\t\tbeginLevel,\n\t\tfinishLevel,\n\t\tresetLevel,\n\t\tsetDialogue,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/gameplayManager.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameplayManager.js */ \"./src/gameplayManager.js\");\n/* harmony import */ var _DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DialogueManager.js */ \"./src/DialogueManager.js\");\n/* harmony import */ var _level_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./level.js */ \"./src/level.js\");\n/* harmony import */ var _levelAtlas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./levelAtlas.js */ \"./src/levelAtlas.js\");\n/* harmony import */ var _portrait_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./portrait.js */ \"./src/portrait.js\");\n/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scene.js */ \"./src/scene.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./settings.js */ \"./src/settings.js\");\n/* harmony import */ var _GameInfoManager_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./GameInfoManager.js */ \"./src/GameInfoManager.js\");\n/* harmony import */ var _widgets_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./widgets.js */ \"./src/widgets.js\");\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/index.js?");

/***/ }),

/***/ "./src/level.js":
/*!**********************!*\
  !*** ./src/level.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Level\": () => (/* binding */ Level)\n/* harmony export */ });\n/* harmony import */ var _DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DialogueManager.js */ \"./src/DialogueManager.js\");\n/* harmony import */ var _gameplayManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameplayManager.js */ \"./src/gameplayManager.js\");\n\n\n\n/** @class Level\n * @summary Represents a level.\n * @classdesc\tHolds all the information representing a level in the game with\n * functions to track progress through the level.\n * @author DTT\n * @param {Number} _id The level's unique id.\n * @param {string} _title The level's title.\n * @param {string} _topic The level's educational topic\n * @param {any} _widget An instance of the widget the level uses.\n * @param {Array} _answers An array of answers the level uses for progression.\n * @param {Array} _dialogue An array of strings the level uses for dialogue.\n * @param {Array} _correctResponses Dialogue that's read when you answer\n * the stage correctly.\n * @param {any} _info Information about the level.\n */\nfunction Level(\n\t_id,\n\t_title,\n\t_topic,\n\t_widget,\n\t_answers,\n\t_dialogue,\n\t_correctResponses,\n\t_info\n) {\n\tlet _currentStage = 0;\n\tlet _locked = false;\n\tlet _completed = false;\n\tlet _firstEntry = true;\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function getId\n\t * @summary Gets the Level's id.\n\t * @acess public\n\t */\n\tfunction getId() {\n\t\treturn _id;\n\t}\n\n\t/** @function isLocked\n\t * @summary Checks if the Level is locked or not.\n\t * @access public\n\t */\n\tfunction isLocked() {\n\t\treturn _locked;\n\t}\n\n\t/** @function isCompleted\n\t * @summary Checks if the Level is completed or not.\n\t * @access public\n\t */\n\tfunction isCompleted() {\n\t\treturn _completed;\n\t}\n\n\t/** @function isFirstEntry\n\t * @summary Checks if the level has been entered for the first time yet.\n\t * @access public\n\t */\n\tfunction isFirstEntry() {\n\t\treturn _firstEntry;\n\t}\n\n\t/** @function generateHtml\n\t * @summary Generates html representing this Level as a level select block.\n\t * @access public\n\t */\n\tfunction generateHtml() {\n\t\tlet root = document.createElement('div');\n\t\troot.classList.add('level-select-item');\n\t\troot.id = `level-select-item-${_id}`;\n\n\t\tlet title = document.createElement('div');\n\t\ttitle.classList.add('level-select-item-title');\n\t\ttitle.innerText = _title;\n\n\t\tlet topic = document.createElement('div');\n\t\ttopic.classList.add('level-select-item-topic');\n\t\ttopic.innerText = _topic;\n\n\t\troot.appendChild(title);\n\t\troot.appendChild(topic);\n\n\t\t//if (_completed) {\n\t\t//\troot.classList.add('level-select-item-completed');\n\t\t//} else if (!_locked) {\n\t\t//\troot.onclick = () => {\n\t\t//\t\tGameplayManager.beginLevel(_id);\n\t\t//\t};\n\t\t//} else {\n\t\t//\troot.classList.add('level-select-item-locked');\n\t\t//}\n\n\t\tif (_completed) {\n\t\t\troot.onclick = () => {\n\t\t\t\t_completed = false;\n\t\t\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_1__.GameplayManager.resetLevel(_id);\n\t\t\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_1__.GameplayManager.beginLevel(_id);\n\t\t\t};\n\t\t} else {\n\t\t\troot.onclick = () => {\n\t\t\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_1__.GameplayManager.beginLevel(_id);\n\t\t\t};\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/** @function submit\n\t * @summary Handles answer checking and progression.\n\t * @description Checks the submission to the current stage's answer, and if\n\t * it's correct it will progress to the next stage of the level.\n\t * @access public\n\t * @param {any} submission The submission to be checked.\n\t */\n\tfunction submit(submission) {\n\t\tif (_completed) {\n\t\t\tconsole.log('This level is already complete.');\n\t\t} else if (submission == _answers[_currentStage]) {\n\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flashMessage(_correctResponses[_currentStage], 2000);\n\t\t\t_currentStage++;\n\t\t\tif (_currentStage > _answers.length - 1) {\n\t\t\t\tfinish();\n\t\t\t} else {\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flushMessageQueue();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enqueue(_dialogue[_currentStage]);\n\t\t\t}\n\t\t} else {\n\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flashMessage('Wrong answer!', 2000);\n\t\t}\n\t}\n\n\t/** @function begin\n\t * @summary Begins the level.\n\t * @description Begins the level, setting up communication with the widget and\n\t * drawing it, filling the level info section, and setting the dialogue.\n\t * @access public\n\t */\n\tfunction begin() {\n\t\tdocument.getElementById('gameplay-container').innerHTML = '';\n\t\t_widget.setLevel(this);\n\t\tdocument\n\t\t\t.getElementById('gameplay-container')\n\t\t\t.appendChild(_widget.generateHtml());\n\t\tif (_info) {\n\t\t\tif (typeof _info == 'object') {\n\t\t\t\tdocument.getElementById('level-info-content').appendChild(_info);\n\t\t\t} else if (typeof _info == 'string') {\n\t\t\t\tdocument.getElementById('level-info-content').innerText = _info;\n\t\t\t}\n\t\t}\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flushMessageQueue();\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enqueue(_dialogue[_currentStage]);\n\t\t_firstEntry = false;\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function finish\n\t * @summary Finishes the level.\n\t * @description Sets the level as completed and returns to level select.\n\t * @access private\n\t */\n\tfunction finish() {\n\t\tconsole.log('Level finished.');\n\t\t_completed = true;\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flushMessageQueue();\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flashMessage(`Level ${_id} complete, good job!`);\n\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_1__.GameplayManager.finishLevel();\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\treturn {\n\t\tgetId,\n\t\tisFirstEntry,\n\t\tgenerateHtml,\n\t\tbegin,\n\t\tsubmit,\n\t};\n}\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/level.js?");

/***/ }),

/***/ "./src/levelAtlas.js":
/*!***************************!*\
  !*** ./src/levelAtlas.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"levelAtlas\": () => (/* binding */ levelAtlas)\n/* harmony export */ });\n/* harmony import */ var _level_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./level.js */ \"./src/level.js\");\n/* harmony import */ var _widgets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./widgets.js */ \"./src/widgets.js\");\n\r\n\r\n\r\n/** @function levelAtlas\r\n * @summary Holds all level information.\r\n * @description Levels are made by hand in this function.\r\n * @author DTT\r\n * @author BC\r\n */\r\nfunction levelAtlas() {\r\n\tlet levels = [];\r\n\r\n\t// Example Level\r\n\t//levels.push(\r\n\t//\tnew Level(\r\n\t//\t\t0,\r\n\t//\t\t'Example Title',\r\n\t//\t\t'Example Topic',\r\n\t//\t\tnew exampleWidget(),\r\n\t//\t\t[2, 'Cat', true],\r\n\t//\t\t['1 + 1 = ?', 'Animal that meows?', 'The sky is blue.']\r\n\t//\t)\r\n\t//);\r\n\r\n\tlevels.push(\r\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\r\n\t\t\t0,\r\n\t\t\t'Binary',\r\n\t\t\t'How do computers think?',\r\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.binaryWidget(),\r\n\t\t\t['1', '5', '255', '81', '198', '234'],\r\n\t\t\t[\r\n\t\t\t\t'Set 1 in binary',\r\n\t\t\t\t'Set 5 in binary',\r\n\t\t\t\t'Set 255 in binary',\r\n\t\t\t\t'Set 81 in binary',\r\n\t\t\t\t'Set 198 in binary',\r\n\t\t\t\t'Continue to experiement, or set 234 in binary and click submit to end this level.',\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t\"That's right!\",\r\n\t\t\t\t'Correct!',\r\n\t\t\t\t'Right again!',\r\n\t\t\t\t'Good job!',\r\n\t\t\t\t'Right!',\r\n\t\t\t\t'Correct!',\r\n\t\t\t],\r\n\t\t\t`Every computer thinks in 1s and 0s, also known as binary.\r\n\r\n            Binary can be used to represent the decimal numbers which we use everyday!\r\n            \r\n            This level provides a tool that has eight \"bits\" which you can toggle on(1) or off(0) by pressing plus or minus buttons.\r\n\r\n            The ranges of numbers you can represent with 8 bits is 0-255.\r\n            `\r\n\t\t)\r\n\t);\r\n\r\n\tlevels.push(\r\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\r\n\t\t\t1,\r\n\t\t\t'Binary conversion',\r\n\t\t\t'How do computers understand English?',\r\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.binaryConvertWidget(),\r\n\t\t\t['a', 'z', '123', 'Hello world!', 'finish'],\r\n\t\t\t[\r\n\t\t\t\t'What is \"a\" in binary?',\r\n\t\t\t\t'What is \"z\" in binary?',\r\n\t\t\t\t'What is \"123\" in binary?',\r\n\t\t\t\t'What is \"Hello world!\" in binary?',\r\n\t\t\t\t'Type whatever you want to see how the computer reads it, or type \"finish\" and click submit to end the level.',\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t\"That's right!\",\r\n\t\t\t\t'Good job!',\r\n\t\t\t\t'Correct!',\r\n\t\t\t\t\"A classic, that's right!\",\r\n\t\t\t\t'Correct answer!',\r\n\t\t\t],\r\n\t\t\t`If computers can only think in binary how can they understand what we type in English?\r\n            \r\n            Computer scientists came up with a clever way to solve this problem.\r\n\r\n            They created a system where they could represent letters and characters as numbers. These numbers could then be converted into binary so the computer can understand what we are saying!\r\n            `\r\n\t\t)\r\n\t);\r\n\r\n\tlevels.push(\r\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\r\n\t\t\t2,\r\n\t\t\t'Colors',\r\n\t\t\t'How do computers see color?',\r\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.RGBWidget(),\r\n\t\t\t['255, 0, 0', '0, 255, 0', '0, 255, 255', '255, 255, 255', '0, 0, 0'],\r\n\t\t\t[\r\n\t\t\t\t'Make red (R:255 G:0 B:0)',\r\n\t\t\t\t'Make green (R:0 G:255 B:0)',\r\n\t\t\t\t'Make cyan (R:0 G:255 B:255)',\r\n\t\t\t\t'Set every slider to 255, what color do we get?',\r\n\t\t\t\t'Continue to experiment with making new colors, or set every slider to 0 and click submit to finish this level.',\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t'Good job!',\r\n\t\t\t\t\"My favorite color, that's right!\",\r\n\t\t\t\t'Correct!',\r\n\t\t\t\t'We get white!',\r\n\t\t\t\t'Correct answer!',\r\n\t\t\t],\r\n\t\t\t`One of the most common ways to represent color to a computer is by using RGB, which stands for Red Green Blue.\r\n\r\n            RGB consists of three numbers, each one ranging from 0-255. These numbers determine how much of each color we add to the mix to get a final output color.\r\n\r\n            Bonus: Isn't it interesting that each color in RGB is represented by a number from 0-255? That's because 0-255 is the range of numbers we can represent with 8 binary bits!\r\n            `\r\n\t\t)\r\n\t);\r\n\r\n\tlevels.push(\r\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\r\n\t\t\t3,\r\n\t\t\t'Command line',\r\n\t\t\t'How do you navigate a computer without a mouse?',\r\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.commandLineWidget(),\r\n\t\t\t['done', 'done', 'done', 'done', 'done', 'done'],\r\n\t\t\t[\r\n\t\t\t\t'The command \"ls\" will show you folders and files, try it out!',\r\n\t\t\t\t'The command \"clear\" will wipe the display. Give it a try.',\r\n\t\t\t\t'The command \"cd\" is used to move between folders. Try typing the command \"cd Desktop\"',\r\n\t\t\t\t'Typing \"cd\" without a target folder will send you to the home folder. Try it now!',\r\n\t\t\t\t'View the current directory you\\'re in by typing the command \"pwd\"',\r\n\t\t\t\t'You are now in free mode! Explore this system to find secrets, or type \"finish\" to complete this level.',\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t'Look at all those folders!',\r\n\t\t\t\t'Nice!',\r\n\t\t\t\t'Beep boop, right again!',\r\n\t\t\t\t\"You're good at this!\",\r\n\t\t\t\t'Good job!',\r\n\t\t\t\t'Correct answer!',\r\n\t\t\t],\r\n\t\t\t`The command line is a user interface for navigating a computers folders and files.\r\n\r\n            This level has a handful of commands to get you comfortable working with the command line.\r\n\r\n            Commands:\r\n                ls - display folders and files\r\n                clear - clear display\r\n                cd - go to home folder\r\n                cd .. - go up a folder\r\n                cd [folderName] - open a folder\r\n                pwd - display current directory\r\n            `\r\n\t\t)\r\n\t);\r\n\r\n\tlevels.push(\r\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\r\n\t\t\t4,\r\n\t\t\t'Final Quiz',\r\n\t\t\t'What have you learned?',\r\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.quizWidget(),\r\n\t\t\t['finished'],\r\n\t\t\t[\r\n\t\t\t\t'Good luck on the quiz! You can go back and reference the other levels if you get stuck.',\r\n\t\t\t],\r\n\t\t\t['Quiz finished!'],\r\n\t\t\t`This quiz will test everything you have learned so far.\r\n            Feel free to revisit the other levels to help you answer each of the questions, your progress will be saved!\r\n            `\r\n\t\t)\r\n\t);\r\n\r\n\t// Dev testing widget.\r\n\t/*\r\n    levels.push(\r\n\t\tnew Level(\r\n\t\t\tlevels.length,\r\n\t\t\t'Testing',\r\n\t\t\t'Testing',\r\n\t\t\tnew binaryWidget(),\r\n\t\t\t['1', '3', '7'],\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t'This is the first message in the queue.',\r\n\t\t\t\t\t'This is the second.',\r\n\t\t\t\t\t'The third. Anser is 1.',\r\n\t\t\t\t],\r\n\t\t\t\t[\r\n\t\t\t\t\t'Now onto the second level, which has two messages queued instead of one.',\r\n\t\t\t\t\t'The answer for this one is 3.',\r\n\t\t\t\t],\r\n\t\t\t\t'The final stage in this test level has one message, no array.',\r\n\t\t\t],\r\n\t\t\t'LEVEL INFO GOES HERE, IT CAN BE AN HTML ELEMENT OBJECT TOO'\r\n\t\t)\r\n\t); */\r\n\r\n\treturn levels;\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://gamejam/./src/levelAtlas.js?");

/***/ }),

/***/ "./src/portrait.js":
/*!*************************!*\
  !*** ./src/portrait.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PortraitManager\": () => (/* binding */ PortraitManager)\n/* harmony export */ });\n/** @constant PortraitManager\n * @summary Manages the systems within the portrait view.\n * @author DTT\n */\nconst PortraitManager = (() => {\n\tconst anchor = document.getElementById('portrait-container');\n\tlet bones = [];\n\tlet images = [];\n\tlet trackers = [];\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function initBoneTracking\n\t * @summary Initializes bone tracking.\n\t * @access public\n\t * @param {number} interval The interval in milliseconds at which the visuals\n\t * are updated to match the internal bone transforms.\n\t */\n\tconst initBoneTracking = (interval) => {\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tclearInterval(trackers[i]);\n\t\t\ttrackers[i] = setInterval(() => {\n\t\t\t\ttrackBone(i);\n\t\t\t}, interval);\n\t\t}\n\t\tconsole.log(`Bone tracking initialized with interval of ${interval}`);\n\t};\n\n\t/** @function enableAnimations\n\t * @summary Enables bone animations.\n\t * @access public\n\t */\n\tconst enableAnimations = function () {\n\t\tbones.forEach((bone) => {\n\t\t\tbone.classList.add('animated');\n\t\t});\n\t};\n\n\t/** @function disableAnimations\n\t * @summary Disables bone animations.\n\t * @access public\n\t */\n\tconst disableAnimations = function () {\n\t\tbones.forEach((bone) => {\n\t\t\tbone.classList.remove('animated');\n\t\t});\n\t};\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the portrait manager.\n\t * @access private\n\t */\n\tconst init = function () {\n\t\tgetBoneAndImageElements();\n\t\tinitBoneTracking(1000 / 60);\n\t};\n\n\t/** @function getBoneAndImageElements\n\t * @summary Gets all the needed elements.\n\t * @access private\n\t */\n\tfunction getBoneAndImageElements() {\n\t\tbones[0] = document.getElementById('bone-wheels');\n\t\tbones[1] = document.getElementById('bone-body-tube');\n\t\tbones[2] = document.getElementById('bone-chest');\n\t\tbones[3] = document.getElementById('bone-right-arm');\n\t\tbones[4] = document.getElementById('bone-right-hand');\n\t\tbones[5] = document.getElementById('bone-left-arm');\n\t\tbones[6] = document.getElementById('bone-left-hand');\n\t\tbones[7] = document.getElementById('bone-head');\n\t\tbones[8] = document.getElementById('bone-face');\n\n\t\timages[0] = document.getElementById('img-wheels');\n\t\timages[1] = document.getElementById('img-body-tube');\n\t\timages[2] = document.getElementById('img-chest');\n\t\timages[3] = document.getElementById('img-right-arm');\n\t\timages[4] = document.getElementById('img-right-hand');\n\t\timages[5] = document.getElementById('img-left-arm');\n\t\timages[6] = document.getElementById('img-left-hand');\n\t\timages[7] = document.getElementById('img-head');\n\t\timages[8] = document.getElementById('img-face');\n\t}\n\n\t/** @function trackBone\n\t * @summary Tracks and image to it's bone.\n\t * @description Sets the image's transforms to match it's matched bone's\n\t * transforms.\n\t * @access private\n\t * @param {number} id The id of the bone / image to adjust.\n\t */\n\tconst trackBone = (id) => {\n\t\timages[id].style.transform = getComputedStyle(bones[id]).getPropertyValue(\n\t\t\t'transform'\n\t\t);\n\t\timages[id].style.transformOrigin = getComputedStyle(\n\t\t\tbones[id]\n\t\t).getPropertyValue('transformOrigin');\n\t\timages[id].style.left =\n\t\t\tbones[id].getBoundingClientRect().left -\n\t\t\tanchor.getBoundingClientRect().left;\n\t\timages[id].style.top =\n\t\t\tbones[id].getBoundingClientRect().top -\n\t\t\tanchor.getBoundingClientRect().top;\n\t};\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n\n\treturn {\n\t\tinitBoneTracking,\n\t\tenableAnimations,\n\t\tdisableAnimations,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/portrait.js?");

/***/ }),

/***/ "./src/scene.js":
/*!**********************!*\
  !*** ./src/scene.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Actor\": () => (/* binding */ Actor),\n/* harmony export */   \"Scene\": () => (/* binding */ Scene)\n/* harmony export */ });\n/** @class Actor\n * @summary Represents an actor for the scene.\n * @classdesc Controls an element that acts as an actor in the scene.\n * @author DTT\n * @param _element The element the actor controls.\n */\nfunction Actor(_element) {\n\tconst MAXPOS_LEFT = 0 + 16;\n\tconst MAXPOS_RIGHT = 672 - 48;\n\n\tlet _posx = 0;\n\tlet _posy = 0;\n\tlet _facing = 1;\n\n\tlet _action = null;\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function commence\n\t * @summary Starts an actor's acting loop.\n\t * @access public\n\t * @param {number} interval The actor's update interval in milliseconds.\n\t */\n\tfunction commence(interval) {\n\t\t_posx = Math.round(MAXPOS_LEFT + Math.random() * MAXPOS_RIGHT);\n\t\tupdateLoop(interval);\n\t\tactionLoop();\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function updateLoop\n\t * @summary The actor's visual update loop.\n\t * @description The update loop handles updating the actor's visual element to\n\t * it's internally computed transforms.\n\t * @access private\n\t * @param {any} interval The interval in milliseconds to update at.\n\t */\n\tfunction updateLoop(interval) {\n\t\t_element.style.transform = `translate(${_posx}px, ${_posy}px) scaleX(${_facing})`;\n\t\tsetTimeout(() => {\n\t\t\tupdateLoop();\n\t\t}, interval);\n\t}\n\n\t/** @function actionLoop\n\t * @summary The actor's action loop.\n\t * @description A loop that randomly assigns actions to the actor at random\n\t * intervals.\n\t * @access private\n\t */\n\tfunction actionLoop() {\n\t\tclearInterval(_action);\n\n\t\tswitch (Math.round(Math.random() * 2)) {\n\t\t\tcase 0: // Do nothing.\n\t\t\t\tbreak;\n\t\t\tcase 1: // Move action.\n\t\t\t\t_facing = Math.random() < 0.5 ? 1 : -1;\n\t\t\t\tmoveAction();\n\t\t\t\tbreak;\n\t\t\tcase 2: // Jump action.\n\t\t\t\tjumpAction();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tsetTimeout(function () {\n\t\t\tactionLoop();\n\t\t}, 500 + Math.random() * 1500);\n\t}\n\n\t/** @function moveAction\n\t * @summary Moves the actor left or right at a random speed.\n\t * @access private\n\t */\n\tfunction moveAction() {\n\t\t_action = setInterval(function () {\n\t\t\tif (_posx < MAXPOS_LEFT) {\n\t\t\t\t_posx = MAXPOS_LEFT;\n\t\t\t\tclearInterval(_action);\n\t\t\t\treturn;\n\t\t\t} else if (_posx > MAXPOS_RIGHT) {\n\t\t\t\t_posx = MAXPOS_RIGHT;\n\t\t\t\tclearInterval(_action);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_posx += _facing;\n\t\t}, 15 + Math.random() * 10);\n\t}\n\n\t/** @function jumpAction\n\t * @summary Makes the actor jump.\n\t * @access private\n\t */\n\tfunction jumpAction() {\n\t\t_action = setInterval(function () {\n\t\t\tif (_posy > -16) {\n\t\t\t\t_posy -= 0.5;\n\t\t\t} else {\n\t\t\t\tclearInterval(_action);\n\t\t\t\t_action = setInterval(() => {\n\t\t\t\t\tif (_posy < 0) {\n\t\t\t\t\t\t_posy += 0.5;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearInterval(_action);\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t}\n\t\t}, 1);\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\treturn {\n\t\tcommence,\n\t};\n}\n\n/** @constant Scene\n * @summary Represents the scene.\n * @description Represents the scene used in the top portion of the screen.\n * @author DTT\n */\nconst Scene = (() => {\n\tlet actors = [];\n\n\t/** @function init\n\t * @summary Initializes the scene.\n\t * @description Creates and commences all actors.\n\t * @access private\n\t */\n\tfunction init() {\n\t\tactors.push(new Actor(document.getElementById('robokid')));\n\t\tactors.push(new Actor(document.getElementById('kid1')));\n\t\tactors.push(new Actor(document.getElementById('kid2')));\n\t\tactors.push(new Actor(document.getElementById('kid3')));\n\t\tactors.forEach((actor) => {\n\t\t\tactor.commence(1000 / 60);\n\t\t});\n\t}\n\n\tinit();\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/scene.js?");

/***/ }),

/***/ "./src/settings.js":
/*!*************************!*\
  !*** ./src/settings.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SettingsManager\": () => (/* binding */ SettingsManager)\n/* harmony export */ });\n/* harmony import */ var _DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DialogueManager.js */ \"./src/DialogueManager.js\");\n/* harmony import */ var _portrait_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./portrait.js */ \"./src/portrait.js\");\n\n\n\n/** @constant SettingsManager\n * @summary Manages the game's settings.\n * @author DTT\n */\nconst SettingsManager = (() => {\n\tconst animId = 'animation-settings-options';\n\tconst fontId = 'font-settings-options';\n\tconst dialId = 'dialogue-settings-options';\n\tconst spchId = 'speech-settings-options';\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the settings manager.\n\t * @access private\n\t */\n\tfunction init() {\n\t\tsetOnclicks();\n\t}\n\n\t/** @function setOnclicks\n\t * @summary Sets all required onclicks.\n\t * @access private\n\t */\n\tfunction setOnclicks() {\n\t\tconst $ = (id) => document.getElementById(id);\n\n\t\t$('open-settings-button').onclick = () => {\n\t\t\topenSettings();\n\t\t};\n\n\t\t$('close-settings-button').onclick = () => {\n\t\t\tcloseSettings();\n\t\t};\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t$(animId).children[i].onclick = () => {\n\t\t\t\tsetAnimationUpdateRate(i);\n\t\t\t};\n\t\t}\n\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t$(fontId).children[i].onclick = () => {\n\t\t\t\tsetFontChoice(i);\n\t\t\t};\n\t\t}\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t$(dialId).children[i].onclick = () => {\n\t\t\t\tsetDialogueSpeed(i);\n\t\t\t};\n\t\t}\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t$(spchId).children[i].onclick = () => {\n\t\t\t\tsetSpeechRate(i);\n\t\t\t};\n\t\t}\n\t}\n\n\t/** @function openSettings\n\t * @summary Opens the settings window.\n\t * @access private\n\t */\n\tfunction openSettings() {\n\t\tdocument.getElementById('settings-container').style.display = '';\n\t}\n\n\t/** @function closeSettings\n\t * @summary Closes the settings window.\n\t * @access private\n\t */\n\tfunction closeSettings() {\n\t\tdocument.getElementById('settings-container').style.display = 'none';\n\t}\n\n\t/** @function setAnimationUpdateRate\n\t * @summary Sets the animation update rate.\n\t * @description The animation update rate controls how often some animated\n\t * features have their visual features updated. More frequent updates means\n\t * more stress on the user's computer.\n\t * @access private\n\t * @param {number} setting 0/1/2/3 as Off/10fps/30fps/Unlimited respectively.\n\t */\n\tfunction setAnimationUpdateRate(setting) {\n\t\tswitch (setting) {\n\t\t\tcase 0:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.disableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.initBoneTracking(Number.MAX_SAFE_INTEGER);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.initBoneTracking(1000 / 10);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.initBoneTracking(1000 / 30);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.initBoneTracking(1);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tArray.from(document.getElementById(animId).children).forEach((child) => {\n\t\t\tchild.classList.remove('selected');\n\t\t});\n\t\tdocument.getElementById(animId).children[setting].classList.add('selected');\n\t}\n\n\t/** @function setFontChoice\n\t * @summary Sets the font choice.\n\t * @description Sets the font for most text in the game.\n\t * @access private\n\t * @param {number} setting 0/1/2 as Pixel/Standard/Dyslexic respectively.\n\t */\n\tfunction setFontChoice(setting) {\n\t\tswitch (setting) {\n\t\t\tcase 0: // Pixel\n\t\t\t\tdocument.body.classList.remove('font-standard');\n\t\t\t\tdocument.body.classList.remove('font-dyslexic');\n\t\t\t\tdocument.body.classList.add('font-pixel');\n\t\t\t\tbreak;\n\t\t\tcase 1: // Standard\n\t\t\t\tdocument.body.classList.remove('font-pixel');\n\t\t\t\tdocument.body.classList.remove('font-dyslexic');\n\t\t\t\tdocument.body.classList.add('font-standard');\n\t\t\t\tbreak;\n\t\t\tcase 2: // Dyslexic\n\t\t\t\tdocument.body.classList.remove('font-pixel');\n\t\t\t\tdocument.body.classList.remove('font-standard');\n\t\t\t\tdocument.body.classList.add('font-dyslexic');\n\t\t\t\tbreak;\n\t\t}\n\n\t\tArray.from(document.getElementById(fontId).children).forEach((child) => {\n\t\t\tchild.classList.remove('selected');\n\t\t});\n\t\tdocument.getElementById(fontId).children[setting].classList.add('selected');\n\t}\n\n\t/** @function setDialogueSpeed\n\t * @summary Sets the dialogue speed.\n\t * @description Sets the speed at which dialogue is \"typed\" out in the\n\t * dialogue box.\n\t * @access private\n\t * @param {number} setting 0/1/2/3 as Off/Slow/Mid/Fast respectively.\n\t */\n\tfunction setDialogueSpeed(setting) {\n\t\tswitch (setting) {\n\t\t\tcase 0: // Off\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.disableTextCrawl();\n\t\t\t\tbreak;\n\t\t\tcase 1: // Slow\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableTextCrawl();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setTextCrawlSpeed(80);\n\t\t\t\tbreak;\n\t\t\tcase 2: // Mid\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableTextCrawl();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setTextCrawlSpeed(40);\n\t\t\t\tbreak;\n\t\t\tcase 3: // Fast\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableTextCrawl();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setTextCrawlSpeed(30);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tArray.from(document.getElementById(dialId).children).forEach((child) => {\n\t\t\tchild.classList.remove('selected');\n\t\t});\n\t\tdocument.getElementById(dialId).children[setting].classList.add('selected');\n\t}\n\n\t/** @function setSpeechRate\n\t * @summary Set the voice speech rate.\n\t * @access private\n\t * @param {number} setting 0/1/2/3 as Off/Slow/Mid/Fast respectively.\n\t */\n\tfunction setSpeechRate(setting) {\n\t\tswitch (setting) {\n\t\t\tcase 0: // Off\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.disableSpeech();\n\t\t\t\tbreak;\n\t\t\tcase 1: // Slow\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableSpeech();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setSpeechRate(0.5);\n\t\t\t\tbreak;\n\t\t\tcase 2: // Mid\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableSpeech();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setSpeechRate(1);\n\t\t\t\tbreak;\n\t\t\tcase 3: // Fast\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableSpeech();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setSpeechRate(1.5);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tArray.from(document.getElementById(spchId).children).forEach((child) => {\n\t\t\tchild.classList.remove('selected');\n\t\t});\n\t\tdocument.getElementById(spchId).children[setting].classList.add('selected');\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/settings.js?");

/***/ }),

/***/ "./src/widgets.js":
/*!************************!*\
  !*** ./src/widgets.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exampleWidget\": () => (/* binding */ exampleWidget),\n/* harmony export */   \"binaryWidget\": () => (/* binding */ binaryWidget),\n/* harmony export */   \"binaryConvertWidget\": () => (/* binding */ binaryConvertWidget),\n/* harmony export */   \"RGBWidget\": () => (/* binding */ RGBWidget),\n/* harmony export */   \"commandLineWidget\": () => (/* binding */ commandLineWidget),\n/* harmony export */   \"quizWidget\": () => (/* binding */ quizWidget)\n/* harmony export */ });\n/*\r\n * All widgets must have the following:\r\n *\r\n * 1. A setLevel() function - When a level object is created, a widget is\r\n * assigned to it, and in the process it must tell the widget what it is so that\r\n * the widget may call it's submit() function for progression through the level.\r\n *\r\n * 2. A generateHtml() function - When a level object is selected by the\r\n * gameplayManager and the player is moved to the gameplay state, this function\r\n * is called by the level to generate the html it requires to run.\r\n *\r\n * 3. A call to their level's submit() function - This is how the\r\n * widget communicates information to the level. It can be of any type and is\r\n * expected to match the individual values set to the level's progression\r\n * requirements when it's made to progress through the stages of the level, and\r\n * ultimately to complete it.\r\n */\r\n\r\nconst exampleWidget = function () {\r\n\tlet _level = null;\r\n\r\n\t/**\r\n\t * Sets the widget's owner level.\r\n\t * @param {any} level The owner level.\r\n\t */\r\n\tfunction setLevel(level) {\r\n\t\t_level = level;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates the html of the widget. Used by it's owner level.\r\n\t */\r\n\tfunction generateHtml() {\r\n\t\tconst container = document.createElement('div');\r\n\t\tcontainer.id = 'example-widget-container';\r\n\r\n\t\tconst inputField = document.createElement('input');\r\n\t\tinputField.id = 'example-widget-input-field';\r\n\r\n\t\tconst submitButton = document.createElement('div');\r\n\t\tsubmitButton.classList.add('submit-button');\r\n\t\tsubmitButton.innerText = 'Submit';\r\n\t\tsubmitButton.onclick = () => {\r\n\t\t\tsubmit();\r\n\t\t};\r\n\r\n\t\tcontainer.appendChild(inputField);\r\n\t\tcontainer.appendChild(submitButton);\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\t/**\r\n\t * Submits the input field's data to the level to attempt progression.\r\n\t */\r\n\tfunction submit() {\r\n\t\tconst submission = document.getElementById(\r\n\t\t\t'example-widget-input-field'\r\n\t\t).value;\r\n\t\t_level.submit(submission);\r\n\t}\r\n\r\n\treturn {\r\n\t\tgenerateHtml,\r\n\t\tsetLevel,\r\n\t};\r\n};\r\n\r\nconst binaryWidget = function () {\r\n\tlet _level = null;\r\n\tconst totalDigits = 8;\r\n\r\n\tfunction setLevel(level) {\r\n\t\t_level = level;\r\n\t}\r\n\r\n\tfunction generateHtml() {\r\n\t\tconst container = document.createElement('div');\r\n\t\tcontainer.id = 'binary-widget-container';\r\n\r\n\t\tconst valueDisplay = document.createElement('div');\r\n\t\tvalueDisplay.id = 'binary-widget-value-display';\r\n\t\tvalueDisplay.innerText = parseInt(binaryArr.join(''), 2);\r\n\r\n\t\tconst toggleDigits = document.createElement('div');\r\n\t\ttoggleDigits.id = 'binary-widget-toggle-digits';\r\n\r\n\t\tconst submitButton = document.createElement('div');\r\n\t\tsubmitButton.classList.add('submit-button');\r\n\t\tsubmitButton.innerText = 'Submit';\r\n\t\tsubmitButton.onclick = () => {\r\n\t\t\tsubmit();\r\n\t\t};\r\n\r\n\t\tcontainer.appendChild(valueDisplay);\r\n\t\tcontainer.appendChild(toggleDigits);\r\n\t\tcontainer.appendChild(submitButton);\r\n\r\n\t\tfor (let i = 0; i < totalDigits; i++) {\r\n\t\t\tlet digitContainer = document.createElement('div');\r\n\t\t\tlet plus = document.createElement('button');\r\n\t\t\tlet digit = document.createElement('div');\r\n\t\t\tlet minus = document.createElement('button');\r\n\r\n\t\t\tdigitContainer.classList.add('digit-container');\r\n\t\t\tdigit.classList.add('digit');\r\n\r\n\t\t\tplus.innerText = '+';\r\n\t\t\tdigit.innerText = binaryArr[i];\r\n\t\t\tminus.innerText = '-';\r\n\r\n\t\t\tdigitContainer.appendChild(plus);\r\n\t\t\tdigitContainer.appendChild(digit);\r\n\t\t\tdigitContainer.appendChild(minus);\r\n\t\t\ttoggleDigits.appendChild(digitContainer);\r\n\r\n\t\t\tplus.addEventListener('click', () => {\r\n\t\t\t\tif (digit.innerText === '0') {\r\n\t\t\t\t\tbinaryArr[i] = 1;\r\n\t\t\t\t\tdigit.innerText = '1';\r\n\t\t\t\t\tdisplayDec();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tminus.addEventListener('click', () => {\r\n\t\t\t\tif (digit.innerText === '1') {\r\n\t\t\t\t\tbinaryArr[i] = 0;\r\n\t\t\t\t\tdigit.innerText = '0';\r\n\t\t\t\t\tdisplayDec();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\tlet binaryArr = (() => {\r\n\t\tlet nums = [];\r\n\t\tfor (let i = 0; i < totalDigits; i++) {\r\n\t\t\tnums.push(0);\r\n\t\t}\r\n\t\treturn nums;\r\n\t})();\r\n\r\n\tfunction displayDec() {\r\n\t\tconst val = document.getElementById('binary-widget-value-display');\r\n\t\tval.innerText = parseInt(binaryArr.join(''), 2);\r\n\t}\r\n\r\n\tfunction submit() {\r\n\t\tconst submission = parseInt(binaryArr.join(''), 2);\r\n\t\t_level.submit(submission);\r\n\t}\r\n\r\n\treturn {\r\n\t\tgenerateHtml,\r\n\t\tsetLevel,\r\n\t};\r\n};\r\n\r\nconst binaryConvertWidget = function () {\r\n\tlet _level = null;\r\n\r\n\tfunction setLevel(level) {\r\n\t\t_level = level;\r\n\t}\r\n\r\n\tfunction generateHtml() {\r\n\t\tconst container = document.createElement('div');\r\n\t\tcontainer.id = 'convert-widget-container';\r\n\r\n\t\tconst input = document.createElement('input');\r\n\t\tinput.id = 'convert-widget-input';\r\n\t\tinput.placeholder = 'Text to binary';\r\n\r\n\t\tconst output = document.createElement('div');\r\n\t\toutput.id = 'convert-widget-output';\r\n\r\n\t\tconst submitButton = document.createElement('div');\r\n\t\tsubmitButton.classList.add('submit-button');\r\n\t\tsubmitButton.innerText = 'Submit';\r\n\t\tsubmitButton.onclick = () => {\r\n\t\t\tsubmit();\r\n\t\t};\r\n\r\n\t\tcontainer.appendChild(input);\r\n\t\tcontainer.appendChild(output);\r\n\t\tcontainer.appendChild(submitButton);\r\n\r\n\t\tinput.addEventListener('input', () => {\r\n\t\t\tconst binary = input.value;\r\n\t\t\toutput.innerText = textToBinary(binary);\r\n\t\t});\r\n\r\n\t\tinput.addEventListener('keypress', (e) => {\r\n\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\tsubmit();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\tfunction textToBinary(text) {\r\n\t\tlet output = '';\r\n\t\tfor (let i = 0; i < text.length; i++) {\r\n\t\t\tlet temp = text.charCodeAt(i).toString(2);\r\n\t\t\tif (temp.length < 8) {\r\n\t\t\t\tfor (let j = temp.length; j < 8; j++) {\r\n\t\t\t\t\ttemp = '0' + temp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toutput += temp + ' ';\r\n\t\t}\r\n\t\treturn output.trim();\r\n\t}\r\n\r\n\tfunction submit() {\r\n\t\tconst submission = document.getElementById('convert-widget-input').value;\r\n\t\tdocument.getElementById('convert-widget-input').value = '';\r\n\t\tdocument.getElementById('convert-widget-output').innerText = '';\r\n\t\t_level.submit(submission);\r\n\t}\r\n\r\n\treturn {\r\n\t\tgenerateHtml,\r\n\t\tsetLevel,\r\n\t};\r\n};\r\n\r\nconst RGBWidget = function () {\r\n\tlet _level = null;\r\n\r\n\tfunction setLevel(level) {\r\n\t\t_level = level;\r\n\t}\r\n\r\n\tlet rgbValues = [0, 0, 0];\r\n\r\n\tfunction generateHtml() {\r\n\t\tconst container = document.createElement('div');\r\n\t\tcontainer.id = 'RGB-widget-container';\r\n\r\n\t\tconst colorDisplay = document.createElement('div');\r\n\t\tcolorDisplay.id = 'RGB-widget-color-display';\r\n\t\tcolorDisplay.style.backgroundColor = `rgb(${rgbValues[0]}, ${rgbValues[1]}, ${rgbValues[2]})`;\r\n\r\n\t\tconst sliderContainer = document.createElement('div');\r\n\t\tsliderContainer.id = 'RGB-widget-slider-container';\r\n\r\n\t\tconst red = document.createElement('div');\r\n\t\tconst redText = document.createElement('div');\r\n\t\tredText.innerText = `Red ${rgbValues[0]}`;\r\n\t\tconst redInput = document.createElement('input');\r\n\t\tredInput.id = 'RGB-widget-red-input';\r\n\t\tredInput.classList.add('slider');\r\n\t\tredInput.type = 'range';\r\n\t\tredInput.min = '0';\r\n\t\tredInput.max = '255';\r\n\t\tredInput.value = rgbValues[0];\r\n\r\n\t\tconst green = document.createElement('div');\r\n\t\tconst greenText = document.createElement('div');\r\n\t\tgreenText.innerText = `Green ${rgbValues[1]}`;\r\n\t\tconst greenInput = document.createElement('input');\r\n\t\tgreenInput.id = 'RGB-widget-green-input';\r\n\t\tgreenInput.classList.add('slider');\r\n\t\tgreenInput.type = 'range';\r\n\t\tgreenInput.min = '0';\r\n\t\tgreenInput.max = '255';\r\n\t\tgreenInput.value = rgbValues[1];\r\n\r\n\t\tconst blue = document.createElement('div');\r\n\t\tconst blueText = document.createElement('div');\r\n\t\tblueText.innerText = `Blue ${rgbValues[2]}`;\r\n\t\tconst blueInput = document.createElement('input');\r\n\t\tblueInput.id = 'GB-widget-blue-input';\r\n\t\tblueInput.classList.add('slider');\r\n\t\tblueInput.type = 'range';\r\n\t\tblueInput.min = '0';\r\n\t\tblueInput.max = '255';\r\n\t\tblueInput.value = rgbValues[2];\r\n\r\n\t\tconst submitButton = document.createElement('div');\r\n\t\tsubmitButton.classList.add('submit-button');\r\n\t\tsubmitButton.innerText = 'Submit';\r\n\t\tsubmitButton.onclick = () => {\r\n\t\t\tsubmit();\r\n\t\t};\r\n\r\n\t\tred.appendChild(redText);\r\n\t\tred.appendChild(redInput);\r\n\r\n\t\tgreen.appendChild(greenText);\r\n\t\tgreen.appendChild(greenInput);\r\n\r\n\t\tblue.appendChild(blueText);\r\n\t\tblue.appendChild(blueInput);\r\n\r\n\t\tsliderContainer.appendChild(red);\r\n\t\tsliderContainer.appendChild(green);\r\n\t\tsliderContainer.appendChild(blue);\r\n\r\n\t\tcontainer.appendChild(colorDisplay);\r\n\t\tcontainer.appendChild(sliderContainer);\r\n\t\tcontainer.appendChild(submitButton);\r\n\r\n\t\tredInput.addEventListener('input', () => {\r\n\t\t\trgbValues[0] = parseInt(redInput.value);\r\n\t\t\tredText.innerText = `Red ${rgbValues[0]}`;\r\n\t\t\tcolorDisplay.style.backgroundColor = `rgb(${rgbValues[0]}, ${rgbValues[1]}, ${rgbValues[2]})`;\r\n\t\t});\r\n\r\n\t\tgreenInput.addEventListener('input', () => {\r\n\t\t\trgbValues[1] = parseInt(greenInput.value);\r\n\t\t\tgreenText.innerText = `Green ${rgbValues[1]}`;\r\n\t\t\tcolorDisplay.style.backgroundColor = `rgb(${rgbValues[0]}, ${rgbValues[1]}, ${rgbValues[2]})`;\r\n\t\t});\r\n\r\n\t\tblueInput.addEventListener('input', () => {\r\n\t\t\trgbValues[2] = parseInt(blueInput.value);\r\n\t\t\tblueText.innerText = `Blue ${rgbValues[2]}`;\r\n\t\t\tcolorDisplay.style.backgroundColor = `rgb(${rgbValues[0]}, ${rgbValues[1]}, ${rgbValues[2]})`;\r\n\t\t});\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\tfunction submit() {\r\n\t\tconst submission = `${rgbValues[0]}, ${rgbValues[1]}, ${rgbValues[2]}`;\r\n\t\t_level.submit(submission);\r\n\t}\r\n\r\n\treturn {\r\n\t\tgenerateHtml,\r\n\t\tsetLevel,\r\n\t};\r\n};\r\n\r\nconst commandLineWidget = function () {\r\n\tlet _level = null;\r\n\r\n\tfunction setLevel(level) {\r\n\t\t_level = level;\r\n\t}\r\n\r\n\tfunction generateHtml() {\r\n\t\tconst container = document.createElement('div');\r\n\t\tcontainer.id = 'cmd-widget-container';\r\n\r\n\t\tconst cmdDisplay = document.createElement('div');\r\n\t\tcmdDisplay.id = 'cmd-widget-display';\r\n\r\n\t\tconst cmdOutput = document.createElement('div');\r\n\t\tcmdOutput.id = 'cmd-widget-output';\r\n\r\n\t\tconst cmdDir = document.createElement('div');\r\n\t\tcmdDir.id = 'cmd-widget-dir';\r\n\r\n\t\tconst cmdDirText = document.createElement('div');\r\n\t\tcmdDirText.id = 'cmd-widget-dir-text';\r\n\r\n\t\tconst cmdDirInput = document.createElement('input');\r\n\t\tcmdDirInput.id = 'cmd-widget-dir-input';\r\n\r\n\t\tconst cmdDirCaret = document.createElement('div');\r\n\t\tcmdDirCaret.id = 'cmd-widget-dir-caret';\r\n\r\n\t\tcmdDir.appendChild(cmdDirText);\r\n\t\tcmdDir.appendChild(cmdDirInput);\r\n\t\tcmdDir.appendChild(cmdDirCaret);\r\n\r\n\t\tcmdDisplay.appendChild(cmdOutput);\r\n\t\tcmdDisplay.appendChild(cmdDir);\r\n\r\n\t\tcontainer.appendChild(cmdDisplay);\r\n\r\n\t\tcmdDirText.innerHTML = `<span class=\"green\">${username}@${computername}</span>:<span class=\"blue\">${currentDir.join(\r\n\t\t\t''\r\n\t\t)}</span>$`;\r\n\r\n\t\tclearInterval(blinking);\r\n\t\tblinking = setInterval(blink, 750);\r\n\r\n\t\tfunction keypress(e) {\r\n\t\t\tinputEffect(e.keyCode);\r\n\t\t}\r\n\r\n\t\tfunction keypressAlt(e) {\r\n\t\t\tswitch (e.keyCode) {\r\n\t\t\t\tcase 8: //Backspace\r\n\t\t\t\t\tinputEffect(e.keyCode);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction keydown(e) {\r\n\t\t\tlet dirText = document.getElementById('cmd-widget-dir-text');\r\n\t\t\tlet command = document.getElementById('cmd-widget-dir-input');\r\n\t\t\tlet output = document.getElementById('cmd-widget-output');\r\n\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\tlet lastCommand = document.createElement('div');\r\n\t\t\t\tlastCommand.innerHTML = `${dirText.innerHTML} ${command.value.trim()}`;\r\n\t\t\t\toutput.prepend(lastCommand);\r\n\r\n\t\t\t\tif (command.value.trim() === 'ls') {\r\n\t\t\t\t\tif (levels[0] != 'done') {\r\n\t\t\t\t\t\tlevels[0] = 'done';\r\n\t\t\t\t\t\tsubmit(levels[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisplayFolders(ls(currentFolder));\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tcommand.value.trim().split(' ').includes('cd') &&\r\n\t\t\t\t\tcommand.value.trim().split(' ').length <= 2\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tlevels[0] === 'done' &&\r\n\t\t\t\t\t\tlevels[1] === 'done' &&\r\n\t\t\t\t\t\tlevels[2] !== 'done'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif (command.value.trim() === 'cd Desktop') {\r\n\t\t\t\t\t\t\tlevels[2] = 'done';\r\n\t\t\t\t\t\t\tsubmit(levels[2]);\r\n\t\t\t\t\t\t\tcd(command.value.trim().split(' ')[1]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet err = document.createElement('div');\r\n\t\t\t\t\t\t\terr.innerText = `Try typing \"cd Desktop\"`;\r\n\t\t\t\t\t\t\terr.classList.add('errMsg');\r\n\t\t\t\t\t\t\toutput.prepend(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tlevels[0] === 'done' &&\r\n\t\t\t\t\t\tlevels[1] === 'done' &&\r\n\t\t\t\t\t\tlevels[2] === 'done' &&\r\n\t\t\t\t\t\tlevels[3] !== 'done'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif (command.value.trim() === 'cd') {\r\n\t\t\t\t\t\t\tlevels[3] = 'done';\r\n\t\t\t\t\t\t\tsubmit(levels[3]);\r\n\t\t\t\t\t\t\tcd(command.value.trim().split(' ')[1]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet err = document.createElement('div');\r\n\t\t\t\t\t\t\terr.innerText = `Try typing \"cd\"`;\r\n\t\t\t\t\t\t\terr.classList.add('errMsg');\r\n\t\t\t\t\t\t\toutput.prepend(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tlevels[0] === 'done' &&\r\n\t\t\t\t\t\tlevels[1] === 'done' &&\r\n\t\t\t\t\t\tlevels[2] === 'done' &&\r\n\t\t\t\t\t\tlevels[3] === 'done'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcd(command.value.trim().split(' ')[1]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet err = document.createElement('div');\r\n\t\t\t\t\t\terr.innerText = `Finish all the tasks before entering free mode`;\r\n\t\t\t\t\t\terr.classList.add('errMsg');\r\n\t\t\t\t\t\toutput.prepend(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (command.value.trim() === 'clear') {\r\n\t\t\t\t\tif (levels[0] === 'done' && levels[1] !== 'done') {\r\n\t\t\t\t\t\tlevels[1] = 'done';\r\n\t\t\t\t\t\tsubmit(levels[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\toutput.innerHTML = '';\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tcommand.value.trim() === 'rm -rf /' ||\r\n\t\t\t\t\tcommand.value.trim() === ':(){:|:&};:'\r\n\t\t\t\t) {\r\n\t\t\t\t\tlet err = document.createElement('div');\r\n\t\t\t\t\terr.innerText = `Calm down there Satan.`;\r\n\t\t\t\t\terr.classList.add('errMsg');\r\n\t\t\t\t\toutput.prepend(err);\r\n\t\t\t\t} else if (command.value.trim() === 'pwd') {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tlevels[0] === 'done' &&\r\n\t\t\t\t\t\tlevels[1] === 'done' &&\r\n\t\t\t\t\t\tlevels[2] === 'done' &&\r\n\t\t\t\t\t\tlevels[3] === 'done' &&\r\n\t\t\t\t\t\tlevels[4] !== 'done'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tlevels[4] = 'done';\r\n\t\t\t\t\t\tsubmit(levels[4]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpwd();\r\n\t\t\t\t} else if (command.value.trim() === 'finish') {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tlevels[0] === 'done' &&\r\n\t\t\t\t\t\tlevels[1] === 'done' &&\r\n\t\t\t\t\t\tlevels[2] === 'done' &&\r\n\t\t\t\t\t\tlevels[3] === 'done' &&\r\n\t\t\t\t\t\tlevels[4] === 'done'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tlevels[5] = 'done';\r\n\t\t\t\t\t\tsubmit(levels[5]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet err = document.createElement('div');\r\n\t\t\t\t\t\terr.innerText = `Complete all tasks first!`;\r\n\t\t\t\t\t\terr.classList.add('errMsg');\r\n\t\t\t\t\t\toutput.prepend(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet err = document.createElement('div');\r\n\t\t\t\t\terr.innerText = `${command.value.trim()}: command not found`;\r\n\t\t\t\t\terr.classList.add('errMsg');\r\n\t\t\t\t\toutput.prepend(err);\r\n\t\t\t\t}\r\n\t\t\t\tcommand.value = '';\r\n\t\t\t\tresizeInput(command);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!listenersExist) {\r\n\t\t\twindow.addEventListener('keypress', keypress);\r\n\t\t\twindow.addEventListener('keydown', keypressAlt);\r\n\t\t\twindow.addEventListener('keydown', keydown);\r\n\r\n\t\t\tlistenersExist = true;\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\tfunction ls(folder) {\r\n\t\tlet output = [];\r\n\r\n\t\tfor (let prop in folder.contents) {\r\n\t\t\toutput.push([prop, folder.contents[prop].type]);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfunction displayFolders(arr) {\r\n\t\tif (!Array.isArray(arr)) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tif (arr.length === 0) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tconst folderDisplay = document.createElement('div');\r\n\t\tconst output = document.getElementById('cmd-widget-output');\r\n\r\n\t\tfor (let ele of arr) {\r\n\t\t\tlet currDiv = document.createElement('span');\r\n\t\t\tcurrDiv.innerText = ele[0] + ' ';\r\n\t\t\tif (ele[1] === 'folder') {\r\n\t\t\t\tcurrDiv.classList.add('folder');\r\n\t\t\t}\r\n\t\t\tfolderDisplay.appendChild(currDiv);\r\n\t\t}\r\n\r\n\t\toutput.prepend(folderDisplay);\r\n\t}\r\n\r\n\tfunction cd(folder) {\r\n\t\tconst dirText = document.getElementById('cmd-widget-dir-text');\r\n\t\tconst output = document.getElementById('cmd-widget-output');\r\n\t\tif (folder === undefined || folder === '~') {\r\n\t\t\tcurrentFolder = root;\r\n\t\t\tcurrentDir = ['~'];\r\n\t\t\tdirText.innerHTML = `<span class=\"green\">${username}@${computername}</span>:<span class=\"blue\">${currentDir.join(\r\n\t\t\t\t''\r\n\t\t\t)}</span>$`;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (folder === '..') {\r\n\t\t\tif (currentDir.length > 1) {\r\n\t\t\t\tlet newFolder = 'root';\r\n\t\t\t\tcurrentDir.pop();\r\n\t\t\t\tfor (let i = 1; i < currentDir.length; i++) {\r\n\t\t\t\t\tnewFolder += `.contents.${currentDir[i].substring(1)}`;\r\n\t\t\t\t}\r\n\t\t\t\tcd();\r\n\t\t\t\tfor (let i = 2; i < newFolder.split('.').length; i += 2) {\r\n\t\t\t\t\tcd(newFolder.split('.')[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcurrentFolder = root;\r\n\t\t\t}\r\n\t\t\tdirText.innerHTML = `<span class=\"green\">${username}@${computername}</span>:<span class=\"blue\">${currentDir.join(\r\n\t\t\t\t''\r\n\t\t\t)}</span>$`;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (currentFolder.contents.hasOwnProperty(folder) === false) {\r\n\t\t\tlet err = document.createElement('div');\r\n\t\t\terr.innerText = `The folder \"${folder}\" does not exist`;\r\n\t\t\terr.classList.add('errMsg');\r\n\t\t\toutput.prepend(err);\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tif (currentFolder.contents[folder].type != 'folder') {\r\n\t\t\tlet err = document.createElement('div');\r\n\t\t\terr.innerText = `\"${folder}\" is a ${currentFolder.contents[folder].type}, not a folder`;\r\n\t\t\terr.classList.add('errMsg');\r\n\t\t\toutput.prepend(err);\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tcurrentFolder = currentFolder.contents[folder];\r\n\t\tcurrentDir.push(`/${folder}`);\r\n\t\tdirText.innerHTML = `<span class=\"green\">${username}@${computername}</span>:<span class=\"blue\">${currentDir.join(\r\n\t\t\t''\r\n\t\t)}</span>$`;\r\n\t}\r\n\r\n\tfunction pwd() {\r\n\t\tlet dir = document.createElement('div');\r\n\t\tlet output = document.getElementById('cmd-widget-output');\r\n\t\tdir.innerText = `/home/${username}${currentDir\r\n\t\t\t.slice(1, currentDir.length)\r\n\t\t\t.join('')}`;\r\n\t\tdir.classList.add('dir');\r\n\t\toutput.prepend(dir);\r\n\t}\r\n\r\n\tlet root = {\r\n\t\ttype: 'root',\r\n\t\tcontents: {\r\n\t\t\tDesktop: {\r\n\t\t\t\ttype: 'folder',\r\n\t\t\t\tcontents: {\r\n\t\t\t\t\tProjects: {\r\n\t\t\t\t\t\ttype: 'folder',\r\n\t\t\t\t\t\tcontents: {\r\n\t\t\t\t\t\t\t['roboKid.js']: {\r\n\t\t\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t['roboKid.html']: {\r\n\t\t\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t['roboKid.css']: {\r\n\t\t\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t['.gitignore']: {\r\n\t\t\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tDownloads: {\r\n\t\t\t\ttype: 'folder',\r\n\t\t\t\tcontents: {\r\n\t\t\t\t\t['introduction_to_web_development.txt']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t['theOdinProjectSecrets.exe']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tDocuments: {\r\n\t\t\t\ttype: 'folder',\r\n\t\t\t\tcontents: {\r\n\t\t\t\t\t['node_modules']: {\r\n\t\t\t\t\t\ttype: 'folder',\r\n\t\t\t\t\t\tcontent: {\r\n\t\t\t\t\t\t\t['oneMillionFiles']: {\r\n\t\t\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tVideos: {\r\n\t\t\t\ttype: 'folder',\r\n\t\t\t\tcontents: {\r\n\t\t\t\t\t['cs50_lecture1.mp4']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t['react_tutorial.mp4']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tMusic: {\r\n\t\t\t\ttype: 'folder',\r\n\t\t\t\tcontents: {\r\n\t\t\t\t\t['DOOMSoundtrack.mp3']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t['KommSusserTod.mp3']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t['NightcoreMix583WeebEdition.mp3']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tPictures: {\r\n\t\t\t\ttype: 'folder',\r\n\t\t\t\tcontents: {\r\n\t\t\t\t\t['DoILookLikeIKnowWhatAJpgIs.jpg']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t['HomeworkCheatsheet.png']: {\r\n\t\t\t\t\t\ttype: 'file',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t['PicturesOfFriends']: {\r\n\t\t\t\t\t\ttype: 'folder',\r\n\t\t\t\t\t\tcontent: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\tconst username = 'robokid';\r\n\tconst computername = 'systemName';\r\n\tlet currentFolder = root;\r\n\tlet currentDir = ['~'];\r\n\tlet blinking;\r\n\tlet listenersExist = false;\r\n\r\n\tlet levels = ['-1', '-1', '-1', '-1', '-1', '-1'];\r\n\r\n\tfunction blink() {\r\n\t\tlet caret = document.getElementById('cmd-widget-dir-caret');\r\n\t\tif (caret != null) {\r\n\t\t\tif (caret.style.visibility === 'visible') {\r\n\t\t\t\tcaret.style.visibility = 'hidden';\r\n\t\t\t} else {\r\n\t\t\t\tcaret.style.visibility = 'visible';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tclearInterval(blinking);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction inputEffect(character) {\r\n\t\tlet caret = document.getElementById('cmd-widget-dir-caret');\r\n\t\tlet input = document.getElementById('cmd-widget-dir-input');\r\n\t\tif (caret != null && input != null) {\r\n\t\t\tswitch (character) {\r\n\t\t\t\tcase 8: //Backspace\r\n\t\t\t\t\tinput.value = input.value.slice(0, -1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tinput.value = input.value + String.fromCharCode(character);\r\n\t\t\t}\r\n\t\t\tclearInterval(blinking);\r\n\t\t\tcaret.style.visibility = 'visible';\r\n\t\t\tresizeInput(input);\r\n\t\t\tblinking = setInterval(blink, 750);\r\n\t\t}\r\n\t}\r\n\r\n\t//Magic resize function\r\n\tfunction resizeInput(input) {\r\n\t\tlet canvas = document.createElement('canvas');\r\n\t\tlet context = canvas.getContext('2d');\r\n\t\tcontext.font = '16px Ubuntu';\r\n\t\tlet width = Math.ceil(context.measureText(input.value).width) + 5;\r\n\t\tinput.style.width = `${width}px`;\r\n\t}\r\n\r\n\tfunction submit(submission) {\r\n\t\t_level.submit(submission);\r\n\t}\r\n\r\n\treturn {\r\n\t\tgenerateHtml,\r\n\t\tsetLevel,\r\n\t};\r\n};\r\n\r\nconst quizWidget = function () {\r\n\tlet _level = null;\r\n\r\n\tfunction setLevel(level) {\r\n\t\t_level = level;\r\n\t}\r\n\r\n\tfunction generateHtml() {\r\n\t\tconst container = document.createElement('div');\r\n\t\tcontainer.id = 'quiz-widget-container';\r\n\r\n\t\tconst question = document.createElement('div');\r\n\t\tquestion.id = 'quiz-widget-question';\r\n\r\n\t\tconst answerContainer = document.createElement('div');\r\n\t\tanswerContainer.id = 'quiz-widget-answer-container';\r\n\r\n\t\tcontainer.appendChild(question);\r\n\t\tcontainer.appendChild(answerContainer);\r\n\r\n\t\tdisplayQuestion(question, answerContainer);\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\tfunction displayQuestion(questionEle, answersContainerEle) {\r\n\t\tquestionEle.innerText = questions[currentQuestion];\r\n\t\tanswersContainerEle.innerHTML = '';\r\n\r\n\t\tfor (let answer of answers[currentQuestion]) {\r\n\t\t\tconst answerEle = document.createElement('div');\r\n\t\t\tanswerEle.innerText = `${answer.val}`;\r\n\t\t\tanswerEle.classList.add('quiz-widget-answer');\r\n\t\t\tanswersContainerEle.appendChild(answerEle);\r\n\r\n\t\t\tanswerEle.addEventListener('click', () => {\r\n\t\t\t\tif (answer.correct) {\r\n\t\t\t\t\tconsole.log('Correct!');\r\n\t\t\t\t\tscore++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Wrong');\r\n\t\t\t\t}\r\n\t\t\t\tcurrentQuestion++;\r\n\t\t\t\tif (questions[currentQuestion] === undefined) {\r\n\t\t\t\t\tanswersContainerEle.innerHTML = '';\r\n\t\t\t\t\tquestionEle.innerText = `Quiz finished. Final score: ${score}/${answers.length}`;\r\n\r\n\t\t\t\t\tconst submitButton = document.createElement('div');\r\n\t\t\t\t\tsubmitButton.classList.add('submit-button');\r\n\t\t\t\t\tsubmitButton.innerText = 'Submit';\r\n\t\t\t\t\tsubmitButton.onclick = () => {\r\n\t\t\t\t\t\tsubmit();\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tanswersContainerEle.appendChild(submitButton);\r\n\r\n\t\t\t\t\tscore = 0;\r\n\t\t\t\t\tcurrentQuestion = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdisplayQuestion(questionEle, answersContainerEle);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tlet score = 0;\r\n\tlet currentQuestion = 0;\r\n\r\n\tconst questions = [\r\n\t\t'What color is R:255 G:255 B:0?',\r\n\t\t'What is the largest number you can make with 8 binary bits?',\r\n\t\t'What does the command \"ls\" do?',\r\n\t\t'If all the numbers in RGB are set to 0, what color would that make?',\r\n\t\t'If 11 in binary is equal to 3, what is 111 in binary equal to?',\r\n\t\t'Are \"a\" and \"A\" represented the same in binary?',\r\n\t\t'What command would we use if we wanted to open the \"Pictures\" folder?',\r\n\t\t'How many bits would we need to represent 47 in binary?',\r\n\t];\r\n\tconst answers = [\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tval: 'Red',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'Pink',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'Yellow',\r\n\t\t\t\tcorrect: true,\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tval: '255',\r\n\t\t\t\tcorrect: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: '64',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: '1028',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tval: 'Displays folders and files',\r\n\t\t\t\tcorrect: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'Clears the screen',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'Changes what folder you are in',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tval: 'White',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'Black',\r\n\t\t\t\tcorrect: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'Orange',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tval: '4',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: '6',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: '7',\r\n\t\t\t\tcorrect: true,\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tval: 'Yes',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'No',\r\n\t\t\t\tcorrect: true,\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tval: 'cd',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'Pictures',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: 'cd Pictures',\r\n\t\t\t\tcorrect: true,\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tval: '4',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: '5',\r\n\t\t\t\tcorrect: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tval: '6',\r\n\t\t\t\tcorrect: true,\r\n\t\t\t},\r\n\t\t],\r\n\t];\r\n\r\n\tfunction submit() {\r\n\t\t_level.submit('finished');\r\n\t}\r\n\r\n\treturn {\r\n\t\tgenerateHtml,\r\n\t\tsetLevel,\r\n\t};\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://gamejam/./src/widgets.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;