/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/DialogueManager.js":
/*!********************************!*\
  !*** ./src/DialogueManager.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DialogueManager\": () => (/* binding */ DialogueManager)\n/* harmony export */ });\n/** @constant DialogueManager\n * @summary Manages the dialogue box.\n * @author DTT\n */\nconst DialogueManager = (() => {\n\tconst _container = document.getElementById('dialogue');\n\tlet _messageQueue = [];\n\tlet _displayMessageTimerId = null;\n\tlet _flashingMessageTimerId = null;\n\tlet _textCrawlEnabled = true;\n\tlet _textCrawlInterval = 40;\n\tlet _speechEnabled = true;\n\tlet _speechRate = 1;\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function enqueue\n\t * @summary Enqueue some message(s) to the dialogue queue.\n\t * @access public\n\t * @param {string|Array} msg The message or messages to queue, as a single\n\t * string or an array of strings.\n\t */\n\tfunction enqueue(msg) {\n\t\tconst displayImmediately = _messageQueue.length == 0;\n\n\t\tif (typeof msg == 'string') {\n\t\t\t_messageQueue.push(msg);\n\t\t}\n\n\t\tif (Array.isArray(msg)) {\n\t\t\tmsg.forEach((msg) => {\n\t\t\t\t_messageQueue.push(msg);\n\t\t\t});\n\t\t}\n\n\t\tif (displayImmediately) {\n\t\t\tdisplayFrontmostQueuedMessage();\n\t\t}\n\t}\n\n\t/** @function flashMessage\n\t * @summary Flashes a message temporarily.\n\t * @access public\n\t * @param {string} message The message to flash\n\t * @param {number} duration The duration in milliseconds to show it.\n\t */\n\tfunction flashMessage(message, duration) {\n\t\tif (_flashingMessageTimerId != null) {\n\t\t\tclearTimeout(_flashingMessageTimerId);\n\t\t\t_flashingMessageTimerId = null;\n\t\t}\n\n\t\tif (typeof message == 'string') {\n\t\t\tdisplayMessage(message);\n\t\t\t_flashingMessageTimerId = setTimeout(() => {\n\t\t\t\t_flashingMessageTimerId = null;\n\t\t\t\tdisplayFrontmostQueuedMessage();\n\t\t\t}, duration);\n\t\t}\n\t}\n\n\t/** @function enableTextCrawl\n\t * @summary Enables text crawl.\n\t * @access public\n\t */\n\tfunction enableTextCrawl() {\n\t\t_textCrawlEnabled = true;\n\t}\n\n\t/** @function disableTextCrawl\n\t * @summary Disables text crawl.\n\t * @access public\n\t */\n\tfunction disableTextCrawl() {\n\t\t_textCrawlEnabled = false;\n\t}\n\n\t/** @function setTextSpeed\n\t * @summary Set the text reveal interval.\n\t * @access public\n\t * @param {number} interval\n\t */\n\tfunction setTextCrawlSpeed(interval) {\n\t\t_textCrawlInterval = interval;\n\t}\n\n\t/** @function enableSpeech\n\t * @summary Enables text-to-speech.\n\t * @access public\n\t */\n\tfunction enableSpeech() {\n\t\t_speechEnabled = true;\n\t}\n\n\t/** @function disableSpeech\n\t * @summary Disables text-to-speech.\n\t * @access public\n\t */\n\tfunction disableSpeech() {\n\t\t_speechEnabled = false;\n\t}\n\n\t/** @function setVoiceRate\n\t * @summary Set the voice speech rate.\n\t * @access public\n\t * @param {number} interval\n\t */\n\tfunction setSpeechRate(rate) {\n\t\t_speechRate = rate;\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the dialogue manager.\n\t * @access private\n\t */\n\tfunction init() {\n\t\t_container.onclick = () => progressDialogue();\n\t}\n\n\t/** @function progressDialogue\n\t * @summary Progresses dialogue queue to the next message.\n\t * @access private\n\t */\n\tfunction progressDialogue() {\n\t\tif (_messageQueue.length > 1 && _flashingMessageTimerId == null) {\n\t\t\t_messageQueue = _messageQueue.splice(1, _messageQueue.length);\n\t\t\tdisplayFrontmostQueuedMessage();\n\t\t}\n\t}\n\n\t/** @function displayFrontmostQueuedMessage\n\t * @summary Displays the frontmost message in the queue.\n\t * @description Does not remove the message from the queue unlike {@link\n\t * DialogueManager#progressDialogue}.\n\t * @access private\n\t */\n\tfunction displayFrontmostQueuedMessage() {\n\t\tif (_flashingMessageTimerId == null) {\n\t\t\tdisplayMessage(_messageQueue[0], _textCrawlInterval);\n\t\t}\n\t}\n\n\t/** @function displayMessage\n\t * @summary Displays a message.\n\t * @description Reveals a message letter by letter into the dialogue box.\n\t * @access private\n\t * @param {string} message The message to display\n\t * @param {number} interval The interval in milliseconds between each letter\n\t * being written.\n\t * @param {number} index Don't set. Used internally, default is 0;\n\t */\n\tfunction displayMessage(message, interval, index = 0) {\n\t\tif (_textCrawlEnabled) {\n\t\t\tif (index == 0) {\n\t\t\t\t_container.innerText = '';\n\t\t\t\tclearTimeout(_displayMessageTimerId);\n\t\t\t\t_displayMessageTimerId = null;\n\t\t\t\tspeak(message);\n\t\t\t}\n\t\t\tif (index < message.length) {\n\t\t\t\t_container.append(message[index++]);\n\t\t\t\t_displayMessageTimerId = setTimeout(() => {\n\t\t\t\t\tdisplayMessage(message, interval, index);\n\t\t\t\t}, interval);\n\t\t\t}\n\t\t} else {\n\t\t\t_container.innerText = message;\n\t\t\tspeak(message);\n\t\t}\n\t}\n\n\tfunction speak(message) {\n\t\tif (_speechEnabled) {\n\t\t\tif (speechSynthesis.speaking) {\n\t\t\t\tspeechSynthesis.cancel();\n\t\t\t}\n\t\t\tconsole.log('should speak');\n\t\t\tconst ssu = new SpeechSynthesisUtterance();\n\t\t\tssu.text = message;\n\t\t\tssu.rate = _speechRate;\n\t\t\tssu.pitch = 2;\n\t\t\tspeechSynthesis.speak(ssu);\n\t\t}\n\t}\n\n\t/** @function flushMessageQueue\n\t * @summary Removes all messages from the queue and empties the dialogue box.\n\t * @access private\n\t */\n\tfunction flushMessageQueue() {\n\t\t_messageQueue = [];\n\t\tif (_flashingMessageTimerId == null) {\n\t\t\tdisplayMessage('', 0, 0);\n\t\t}\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n\n\treturn {\n\t\tenqueue,\n\t\tflashMessage,\n\t\tflushMessageQueue,\n\t\tenableTextCrawl,\n\t\tdisableTextCrawl,\n\t\tenableSpeech,\n\t\tdisableSpeech,\n\t\tsetTextCrawlSpeed,\n\t\tsetSpeechRate,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/DialogueManager.js?");

/***/ }),

/***/ "./src/gameplayManager.js":
/*!********************************!*\
  !*** ./src/gameplayManager.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameplayManager\": () => (/* binding */ GameplayManager)\n/* harmony export */ });\n/* harmony import */ var _levelAtlas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./levelAtlas.js */ \"./src/levelAtlas.js\");\n/* harmony import */ var _DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DialogueManager.js */ \"./src/DialogueManager.js\");\n\n\n\n/** @constant GameplayManager\n * @summary Manages most communication between gameplay and other systems.\n * @author DTT\n */\nconst GameplayManager = (() => {\n\tconst $ = (id) => document.getElementById(id);\n\tconst _gameplayContainer = $('gameplay-container');\n\tconst _levelSelectContainer = $('level-select-container');\n\tconst _levelSelectItemsContainer = $('level-select-items');\n\tconst _levelInfoContainer = $('level-info-container');\n\n\tlet _levels = [];\n\n\tlet _dialogueMainText = '';\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function beginLevel\n\t * @summary Exits level select and beginds a level.\n\t * @access public\n\t * @param {number} id The id of the level to begin.\n\t */\n\tfunction beginLevel(id) {\n\t\t_levels[id].begin(_levels[id]);\n\t\texitLevelSelect();\n\t}\n\n\t/** @function finishLevel\n\t * @summary Returns to level select.\n\t * @description Generates new level select html and goes to level select.\n\t * @access public\n\t */\n\tfunction finishLevel() {\n\t\tgenerateLevelSelectHtml();\n\t\tenterLevelSelect();\n\t}\n\n\t/** @function setDialogue\n\t * @summary Sets the content of the dialogue box.\n\t * @description Sets the content of the dialogue box. Options include {\n\t * duration }\n\t * @access public\n\t * @param {string} msg The text to set.\n\t * @param {object} opts Extra options.\n\t */\n\tfunction setDialogue(msg, opts) {\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__.DialogueManager.setDialogue(msg, opts);\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the gameplay manager.\n\t * @description Grabs the level atlas and readies level select.\n\t * @access private\n\t */\n\tfunction init() {\n\t\t_levels = (0,_levelAtlas_js__WEBPACK_IMPORTED_MODULE_0__.levelAtlas)();\n\t\tgenerateLevelSelectHtml();\n\n\t\tdocument.getElementById('level-select-open-button').onclick = function () {\n\t\t\tenterLevelSelect();\n\t\t};\n\t\tdocument.getElementById('level-info-open-button').onclick = function () {\n\t\t\tenterLevelInfo();\n\t\t};\n\t\tdocument.getElementById('level-info-return-button').onclick = function () {\n\t\t\texitLevelInfo();\n\t\t};\n\n\t\tenterLevelSelect();\n\t\t_levelSelectContainer.classList.remove('level-select-open-animation');\n\t}\n\n\t/** @function generateLevelSelectHtml\n\t * @summary Generates new level select HTML.\n\t * @access private\n\t */\n\tfunction generateLevelSelectHtml() {\n\t\t_levelSelectItemsContainer.innerHTML = '';\n\t\t_levels.forEach((lvl) => {\n\t\t\t_levelSelectItemsContainer.appendChild(lvl.generateHtml());\n\t\t});\n\t}\n\n\t/** @function enterLevelSelect\n\t * @summary Opens the level select dock.\n\t * @access private\n\t */\n\tfunction enterLevelSelect() {\n\t\t_levelSelectContainer.className = '';\n\t\t_levelSelectContainer.classList.add('level-select-open-animation');\n\t\t_levelInfoContainer.className = '';\n\t\t_levelInfoContainer.classList.add('level-info-hide-animation');\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__.DialogueManager.flushMessageQueue();\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__.DialogueManager.enqueue('Select a level to play.');\n\t}\n\n\t/** @function exitLevelSelect\n\t * @summary Closes the level select dock.\n\t * @access private\n\t */\n\tfunction exitLevelSelect() {\n\t\t_levelSelectContainer.className = '';\n\t\t_levelSelectContainer.classList.add('level-select-close-animation');\n\t\t_levelInfoContainer.className = '';\n\t\t_levelInfoContainer.classList.add('level-info-reveal-animation');\n\t}\n\n\t/** @function enterLevelInfo\n\t * @summary Opens the level info dock.\n\t * @access private\n\t */\n\tfunction enterLevelInfo() {\n\t\t_levelInfoContainer.className = '';\n\t\t_levelInfoContainer.classList.add('level-info-open-animation');\n\t\t_levelSelectContainer.className = '';\n\t\t_levelSelectContainer.classList.add('level-select-hide-animation');\n\t}\n\n\t/** @function exitLevelInfo\n\t * @summary Closes the level info dock.\n\t * @access private\n\t */\n\tfunction exitLevelInfo() {\n\t\t_levelInfoContainer.className = '';\n\t\t_levelInfoContainer.classList.add('level-info-close-animation');\n\t\t_levelSelectContainer.className = '';\n\t\t_levelSelectContainer.classList.add('level-select-reveal-animation');\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n\n\treturn {\n\t\tbeginLevel,\n\t\tfinishLevel,\n\t\tsetDialogue,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/gameplayManager.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gameplayManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameplayManager.js */ \"./src/gameplayManager.js\");\n/* harmony import */ var _DialogueManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DialogueManager.js */ \"./src/DialogueManager.js\");\n/* harmony import */ var _level_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./level.js */ \"./src/level.js\");\n/* harmony import */ var _levelAtlas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./levelAtlas.js */ \"./src/levelAtlas.js\");\n/* harmony import */ var _portrait_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./portrait.js */ \"./src/portrait.js\");\n/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scene.js */ \"./src/scene.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./settings.js */ \"./src/settings.js\");\n/* harmony import */ var _widgets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./widgets.js */ \"./src/widgets.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/index.js?");

/***/ }),

/***/ "./src/level.js":
/*!**********************!*\
  !*** ./src/level.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Level\": () => (/* binding */ Level)\n/* harmony export */ });\n/* harmony import */ var _DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DialogueManager.js */ \"./src/DialogueManager.js\");\n/* harmony import */ var _gameplayManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameplayManager.js */ \"./src/gameplayManager.js\");\n\n\n\n/** @class Level\n * @summary Represents a level.\n * @classdesc\tHolds all the information representing a level in the game with\n * functions to track progress through the level.\n * @author DTT\n * @param {Number} _id The level's unique id.\n * @param {string} _title The level's title.\n * @param {string} _topic The level's educational topic\n * @param {any} _widget An instance of the widget the level uses.\n * @param {Array} _answers An array of answers the level uses for progression.\n * @param {Array} _dialogue An array of strings the level uses for dialogue.\n */\nfunction Level(_id, _title, _topic, _widget, _answers, _dialogue, _info) {\n\tlet _currentStage = 0;\n\tlet _locked = false;\n\tlet _completed = false;\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function getId\n\t * @summary Gets the Level's id.\n\t * @acess public\n\t */\n\tfunction getId() {\n\t\treturn _id;\n\t}\n\n\t/** @function isLocked\n\t * @summary Checks if the Level is locked or not.\n\t * @access public\n\t */\n\tfunction isLocked() {\n\t\treturn _locked;\n\t}\n\n\t/** @function isCompleted\n\t * @summary Checks if the Level is completed or not.\n\t * @access public\n\t */\n\tfunction isCompleted() {\n\t\treturn _completed;\n\t}\n\n\t/** @function generateHtml\n\t * @summary Generates html representing this Level as a level select block.\n\t * @access public\n\t */\n\tfunction generateHtml() {\n\t\tlet root = document.createElement('div');\n\t\troot.classList.add('level-select-item');\n\t\troot.id = `level-select-item-${_id}`;\n\n\t\tlet title = document.createElement('div');\n\t\ttitle.classList.add('level-select-item-title');\n\t\ttitle.innerText = _title;\n\n\t\tlet topic = document.createElement('div');\n\t\ttopic.classList.add('level-select-item-topic');\n\t\ttopic.innerText = _topic;\n\n\t\troot.appendChild(title);\n\t\troot.appendChild(topic);\n\n\t\tif (_completed) {\n\t\t\troot.classList.add('level-select-item-completed');\n\t\t} else if (!_locked) {\n\t\t\troot.onclick = () => {\n\t\t\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_1__.GameplayManager.beginLevel(_id);\n\t\t\t};\n\t\t} else {\n\t\t\troot.classList.add('level-select-item-locked');\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/** @function submit\n\t * @summary Handles answer checking and progression.\n\t * @description Checks the submission to the current stage's answer, and if\n\t * it's correct it will progress to the next stage of the level.\n\t * @access public\n\t * @param {any} submission The submission to be checked.\n\t */\n\tfunction submit(submission) {\n\t\tif (_completed) {\n\t\t\tconsole.log('This level is already complete.');\n\t\t} else if (submission == _answers[_currentStage]) {\n\t\t\t_currentStage++;\n\t\t\tif (_currentStage > _answers.length - 1) {\n\t\t\t\tfinish();\n\t\t\t} else {\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flushMessageQueue();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flashMessage('Correct answer!', 2000);\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enqueue(_dialogue[_currentStage]);\n\t\t\t}\n\t\t} else {\n\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flashMessage('Wrong answer!', 2000);\n\t\t}\n\t}\n\n\t/** @function begin\n\t * @summary Begins the level.\n\t * @description Begins the level, setting up communication with the widget and\n\t * drawing it, filling the level info section, and setting the dialogue.\n\t * @access public\n\t */\n\tfunction begin() {\n\t\tdocument.getElementById('gameplay-container').innerHTML = '';\n\t\t_widget.setLevel(this);\n\t\tdocument\n\t\t\t.getElementById('gameplay-container')\n\t\t\t.appendChild(_widget.generateHtml());\n\t\tif (_info) {\n\t\t\tif (typeof _info == 'object') {\n\t\t\t\tdocument.getElementById('level-info-content').appendChild(_info);\n\t\t\t} else if (typeof _info == 'string') {\n\t\t\t\tdocument.getElementById('level-info-content').innerText = _info;\n\t\t\t}\n\t\t}\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flushMessageQueue();\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enqueue(_dialogue[_currentStage]);\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function finish\n\t * @summary Finishes the level.\n\t * @description Sets the level as completed and returns to level select.\n\t * @access private\n\t */\n\tfunction finish() {\n\t\tconsole.log('Level finished.');\n\t\t_completed = true;\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flushMessageQueue();\n\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.flashMessage(`Level ${_id} complete, good job!`);\n\t\t_gameplayManager_js__WEBPACK_IMPORTED_MODULE_1__.GameplayManager.finishLevel();\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\treturn {\n\t\tgetId,\n\t\tgenerateHtml,\n\t\tbegin,\n\t\tsubmit,\n\t};\n}\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/level.js?");

/***/ }),

/***/ "./src/levelAtlas.js":
/*!***************************!*\
  !*** ./src/levelAtlas.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"levelAtlas\": () => (/* binding */ levelAtlas)\n/* harmony export */ });\n/* harmony import */ var _level_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./level.js */ \"./src/level.js\");\n/* harmony import */ var _widgets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./widgets.js */ \"./src/widgets.js\");\n\n\n\n/** @function levelAtlas\n * @summary Holds all level information.\n * @description Levels are made by hand in this function.\n * @author DTT\n * @author BC\n */\nfunction levelAtlas() {\n\tlet levels = [];\n\n\t// Example Level\n\t//levels.push(\n\t//\tnew Level(\n\t//\t\t0,\n\t//\t\t'Example Title',\n\t//\t\t'Example Topic',\n\t//\t\tnew exampleWidget(),\n\t//\t\t[2, 'Cat', true],\n\t//\t\t['1 + 1 = ?', 'Animal that meows?', 'The sky is blue.']\n\t//\t)\n\t//);\n\n\tlevels.push(\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\n\t\t\t0,\n\t\t\t'Binary',\n\t\t\t'Introduction to binary',\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.binaryWidget(),\n\t\t\t['1', '5', '198'],\n\t\t\t['Write 1 in binary', 'Write 5 in binary', 'Write 198 in binary'],\n\t\t\t'LEVEL INFO GOES HERE, IT CAN BE AN HTML ELEMENT OBJECT TOO'\n\t\t)\n\t);\n\n\tlevels.push(\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\n\t\t\t1,\n\t\t\t'Binary conversion',\n\t\t\t'Learn to convert to and from binary',\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.binaryConvertWidget(),\n\t\t\t['a', 'A', 'Hello world!'],\n\t\t\t[\n\t\t\t\t'What is \"a\" in binary?',\n\t\t\t\t'What is \"A\" in binary?',\n\t\t\t\t'What is \"Hello world!\" in binary?',\n\t\t\t],\n\t\t\t'LEVEL INFO GOES HERE, IT CAN BE AN HTML ELEMENT OBJECT TOO'\n\t\t)\n\t);\n\n\t// Dev testing widget.\n\tlevels.push(\n\t\tnew _level_js__WEBPACK_IMPORTED_MODULE_0__.Level(\n\t\t\tlevels.length,\n\t\t\t'Testing',\n\t\t\t'Testing',\n\t\t\tnew _widgets_js__WEBPACK_IMPORTED_MODULE_1__.binaryWidget(),\n\t\t\t['1', '3', '7'],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'This is the first message in the queue.',\n\t\t\t\t\t'This is the second.',\n\t\t\t\t\t'The third. Anser is 1.',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'Now onto the second level, which has two messages queued instead of one.',\n\t\t\t\t\t'The answer for this one is 3.',\n\t\t\t\t],\n\t\t\t\t'The final stage in this test level has one message, no array.',\n\t\t\t],\n\t\t\t'LEVEL INFO GOES HERE, IT CAN BE AN HTML ELEMENT OBJECT TOO'\n\t\t)\n\t);\n\n\treturn levels;\n}\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/levelAtlas.js?");

/***/ }),

/***/ "./src/portrait.js":
/*!*************************!*\
  !*** ./src/portrait.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PortraitManager\": () => (/* binding */ PortraitManager)\n/* harmony export */ });\n/** @constant PortraitManager\n * @summary Manages the systems within the portrait view.\n * @author DTT\n */\nconst PortraitManager = (() => {\n\tconst anchor = document.getElementById('portrait-container');\n\tlet bones = [];\n\tlet images = [];\n\tlet trackers = [];\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function initBoneTracking\n\t * @summary Initializes bone tracking.\n\t * @access public\n\t * @param {number} interval The interval in milliseconds at which the visuals\n\t * are updated to match the internal bone transforms.\n\t */\n\tconst initBoneTracking = (interval) => {\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tclearInterval(trackers[i]);\n\t\t\ttrackers[i] = setInterval(() => {\n\t\t\t\ttrackBone(i);\n\t\t\t}, interval);\n\t\t}\n\t\tconsole.log(`Bone tracking initialized with interval of ${interval}`);\n\t};\n\n\t/** @function enableAnimations\n\t * @summary Enables bone animations.\n\t * @access public\n\t */\n\tconst enableAnimations = function () {\n\t\tbones.forEach((bone) => {\n\t\t\tbone.classList.add('animated');\n\t\t});\n\t};\n\n\t/** @function disableAnimations\n\t * @summary Disables bone animations.\n\t * @access public\n\t */\n\tconst disableAnimations = function () {\n\t\tbones.forEach((bone) => {\n\t\t\tbone.classList.remove('animated');\n\t\t});\n\t};\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the portrait manager.\n\t * @access private\n\t */\n\tconst init = function () {\n\t\tgetBoneAndImageElements();\n\t\tinitBoneTracking(1000 / 60);\n\t};\n\n\t/** @function getBoneAndImageElements\n\t * @summary Gets all the needed elements.\n\t * @access private\n\t */\n\tfunction getBoneAndImageElements() {\n\t\tbones[0] = document.getElementById('bone-wheels');\n\t\tbones[1] = document.getElementById('bone-body-tube');\n\t\tbones[2] = document.getElementById('bone-chest');\n\t\tbones[3] = document.getElementById('bone-right-arm');\n\t\tbones[4] = document.getElementById('bone-right-hand');\n\t\tbones[5] = document.getElementById('bone-left-arm');\n\t\tbones[6] = document.getElementById('bone-left-hand');\n\t\tbones[7] = document.getElementById('bone-head');\n\t\tbones[8] = document.getElementById('bone-face');\n\n\t\timages[0] = document.getElementById('img-wheels');\n\t\timages[1] = document.getElementById('img-body-tube');\n\t\timages[2] = document.getElementById('img-chest');\n\t\timages[3] = document.getElementById('img-right-arm');\n\t\timages[4] = document.getElementById('img-right-hand');\n\t\timages[5] = document.getElementById('img-left-arm');\n\t\timages[6] = document.getElementById('img-left-hand');\n\t\timages[7] = document.getElementById('img-head');\n\t\timages[8] = document.getElementById('img-face');\n\t}\n\n\t/** @function trackBone\n\t * @summary Tracks and image to it's bone.\n\t * @description Sets the image's transforms to match it's matched bone's\n\t * transforms.\n\t * @access private\n\t * @param {number} id The id of the bone / image to adjust.\n\t */\n\tconst trackBone = (id) => {\n\t\timages[id].style.transform = getComputedStyle(bones[id]).getPropertyValue(\n\t\t\t'transform'\n\t\t);\n\t\timages[id].style.transformOrigin = getComputedStyle(\n\t\t\tbones[id]\n\t\t).getPropertyValue('transformOrigin');\n\t\timages[id].style.left =\n\t\t\tbones[id].getBoundingClientRect().left -\n\t\t\tanchor.getBoundingClientRect().left;\n\t\timages[id].style.top =\n\t\t\tbones[id].getBoundingClientRect().top -\n\t\t\tanchor.getBoundingClientRect().top;\n\t};\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n\n\treturn {\n\t\tinitBoneTracking,\n\t\tenableAnimations,\n\t\tdisableAnimations,\n\t};\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/portrait.js?");

/***/ }),

/***/ "./src/scene.js":
/*!**********************!*\
  !*** ./src/scene.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Actor\": () => (/* binding */ Actor),\n/* harmony export */   \"Scene\": () => (/* binding */ Scene)\n/* harmony export */ });\n/** @class Actor\n * @summary Represents an actor for the scene.\n * @classdesc Controls an element that acts as an actor in the scene.\n * @author DTT\n * @param _element The element the actor controls.\n */\nfunction Actor(_element) {\n\tconst MAXPOS_LEFT = 0 + 16;\n\tconst MAXPOS_RIGHT = 672 - 48;\n\n\tlet _posx = 0;\n\tlet _posy = 0;\n\tlet _facing = 1;\n\n\tlet _action = null;\n\n\t/* ------------------------ */\n\t/*                          */\n\t/*     PUBLIC FUNCTIONS     */\n\t/*                          */\n\t/* ------------------------ */\n\n\t/** @function commence\n\t * @summary Starts an actor's acting loop.\n\t * @access public\n\t * @param {number} interval The actor's update interval in milliseconds.\n\t */\n\tfunction commence(interval) {\n\t\t_posx = Math.round(MAXPOS_LEFT + Math.random() * MAXPOS_RIGHT);\n\t\tupdateLoop(interval);\n\t\tactionLoop();\n\t}\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function updateLoop\n\t * @summary The actor's visual update loop.\n\t * @description The update loop handles updating the actor's visual element to\n\t * it's internally computed transforms.\n\t * @access private\n\t * @param {any} interval The interval in milliseconds to update at.\n\t */\n\tfunction updateLoop(interval) {\n\t\t_element.style.transform = `translate(${_posx}px, ${_posy}px) scaleX(${_facing})`;\n\t\tsetTimeout(() => {\n\t\t\tupdateLoop();\n\t\t}, interval);\n\t}\n\n\t/** @function actionLoop\n\t * @summary The actor's action loop.\n\t * @description A loop that randomly assigns actions to the actor at random\n\t * intervals.\n\t * @access private\n\t */\n\tfunction actionLoop() {\n\t\tclearInterval(_action);\n\n\t\tswitch (Math.round(Math.random() * 2)) {\n\t\t\tcase 0: // Do nothing.\n\t\t\t\tbreak;\n\t\t\tcase 1: // Move action.\n\t\t\t\t_facing = Math.random() < 0.5 ? 1 : -1;\n\t\t\t\tmoveAction();\n\t\t\t\tbreak;\n\t\t\tcase 2: // Jump action.\n\t\t\t\tjumpAction();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tsetTimeout(function () {\n\t\t\tactionLoop();\n\t\t}, 500 + Math.random() * 1500);\n\t}\n\n\t/** @function moveAction\n\t * @summary Moves the actor left or right at a random speed.\n\t * @access private\n\t */\n\tfunction moveAction() {\n\t\t_action = setInterval(function () {\n\t\t\tif (_posx < MAXPOS_LEFT) {\n\t\t\t\t_posx = MAXPOS_LEFT;\n\t\t\t\tclearInterval(_action);\n\t\t\t\treturn;\n\t\t\t} else if (_posx > MAXPOS_RIGHT) {\n\t\t\t\t_posx = MAXPOS_RIGHT;\n\t\t\t\tclearInterval(_action);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_posx += _facing;\n\t\t}, 15 + Math.random() * 10);\n\t}\n\n\t/** @function jumpAction\n\t * @summary Makes the actor jump.\n\t * @access private\n\t */\n\tfunction jumpAction() {\n\t\t_action = setInterval(function () {\n\t\t\tif (_posy > -16) {\n\t\t\t\t_posy -= 2;\n\t\t\t} else {\n\t\t\t\tclearInterval(_action);\n\t\t\t\t_action = setInterval(() => {\n\t\t\t\t\tif (_posy < 0) {\n\t\t\t\t\t\t_posy += 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearInterval(_action);\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t}\n\t\t}, 1);\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\treturn {\n\t\tcommence,\n\t};\n}\n\n/** @constant Scene\n * @summary Represents the scene.\n * @description Represents the scene used in the top portion of the screen.\n * @author DTT\n */\nconst Scene = (() => {\n\tlet actors = [];\n\n\t/** @function init\n\t * @summary Initializes the scene.\n\t * @description Creates and commences all actors.\n\t * @access private\n\t */\n\tfunction init() {\n\t\tactors.push(new Actor(document.getElementById('robokid')));\n\t\tactors.push(new Actor(document.getElementById('kid1')));\n\t\tactors.push(new Actor(document.getElementById('kid2')));\n\t\tactors.push(new Actor(document.getElementById('kid3')));\n\t\tactors.forEach((actor) => {\n\t\t\tactor.commence(1000 / 60);\n\t\t});\n\t}\n\n\tinit();\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/scene.js?");

/***/ }),

/***/ "./src/settings.js":
/*!*************************!*\
  !*** ./src/settings.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SettingsManager\": () => (/* binding */ SettingsManager)\n/* harmony export */ });\n/* harmony import */ var _DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DialogueManager.js */ \"./src/DialogueManager.js\");\n/* harmony import */ var _portrait_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./portrait.js */ \"./src/portrait.js\");\n\n\n\n/** @constant SettingsManager\n * @summary Manages the game's settings.\n * @author DTT\n */\nconst SettingsManager = (() => {\n\tconst animId = 'animation-settings-options';\n\tconst fontId = 'font-settings-options';\n\tconst dialId = 'dialogue-settings-options';\n\tconst spchId = 'speech-settings-options';\n\n\t/* ------------------------- */\n\t/*                           */\n\t/*     PRIVATE FUNCTIONS     */\n\t/*                           */\n\t/* ------------------------- */\n\n\t/** @function init\n\t * @summary Initializes the settings manager.\n\t * @access private\n\t */\n\tfunction init() {\n\t\tsetOnclicks();\n\t}\n\n\t/** @function setOnclicks\n\t * @summary Sets all required onclicks.\n\t * @access private\n\t */\n\tfunction setOnclicks() {\n\t\tconst $ = (id) => document.getElementById(id);\n\n\t\t$('open-settings-button').onclick = () => {\n\t\t\topenSettings();\n\t\t};\n\n\t\t$('close-settings-button').onclick = () => {\n\t\t\tcloseSettings();\n\t\t};\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t$(animId).children[i].onclick = () => {\n\t\t\t\tsetAnimationUpdateRate(i);\n\t\t\t};\n\t\t}\n\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t$(fontId).children[i].onclick = () => {\n\t\t\t\tsetFontChoice(i);\n\t\t\t};\n\t\t}\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t$(dialId).children[i].onclick = () => {\n\t\t\t\tsetDialogueSpeed(i);\n\t\t\t};\n\t\t}\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t$(spchId).children[i].onclick = () => {\n\t\t\t\tsetSpeechRate(i);\n\t\t\t};\n\t\t}\n\t}\n\n\t/** @function openSettings\n\t * @summary Opens the settings window.\n\t * @access private\n\t */\n\tfunction openSettings() {\n\t\tdocument.getElementById('settings-container').style.display = '';\n\t}\n\n\t/** @function closeSettings\n\t * @summary Closes the settings window.\n\t * @access private\n\t */\n\tfunction closeSettings() {\n\t\tdocument.getElementById('settings-container').style.display = 'none';\n\t}\n\n\t/** @function setAnimationUpdateRate\n\t * @summary Sets the animation update rate.\n\t * @description The animation update rate controls how often some animated\n\t * features have their visual features updated. More frequent updates means\n\t * more stress on the user's computer.\n\t * @access private\n\t * @param {number} setting 0/1/2/3 as Off/10fps/30fps/Unlimited respectively.\n\t */\n\tfunction setAnimationUpdateRate(setting) {\n\t\tswitch (setting) {\n\t\t\tcase 0:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.disableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.initBoneTracking(Number.MAX_SAFE_INTEGER);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.initBoneTracking(1000 / 10);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.initBoneTracking(1000 / 30);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.enableAnimations();\n\t\t\t\t_portrait_js__WEBPACK_IMPORTED_MODULE_1__.PortraitManager.initBoneTracking(1);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tArray.from(document.getElementById(animId).children).forEach((child) => {\n\t\t\tchild.classList.remove('selected');\n\t\t});\n\t\tdocument.getElementById(animId).children[setting].classList.add('selected');\n\t}\n\n\t/** @function setFontChoice\n\t * @summary Sets the font choice.\n\t * @description Sets the font for most text in the game.\n\t * @access private\n\t * @param {number} setting 0/1/2 as Pixel/Standard/Dyslexic respectively.\n\t */\n\tfunction setFontChoice(setting) {\n\t\tswitch (setting) {\n\t\t\tcase 0: // Pixel\n\t\t\t\tdocument.body.classList.remove('font-standard');\n\t\t\t\tdocument.body.classList.remove('font-dyslexic');\n\t\t\t\tdocument.body.classList.add('font-pixel');\n\t\t\t\tbreak;\n\t\t\tcase 1: // Standard\n\t\t\t\tdocument.body.classList.remove('font-pixel');\n\t\t\t\tdocument.body.classList.remove('font-dyslexic');\n\t\t\t\tdocument.body.classList.add('font-standard');\n\t\t\t\tbreak;\n\t\t\tcase 2: // Dyslexic\n\t\t\t\tdocument.body.classList.remove('font-pixel');\n\t\t\t\tdocument.body.classList.remove('font-standard');\n\t\t\t\tdocument.body.classList.add('font-dyslexic');\n\t\t\t\tbreak;\n\t\t}\n\n\t\tArray.from(document.getElementById(fontId).children).forEach((child) => {\n\t\t\tchild.classList.remove('selected');\n\t\t});\n\t\tdocument.getElementById(fontId).children[setting].classList.add('selected');\n\t}\n\n\t/** @function setDialogueSpeed\n\t * @summary Sets the dialogue speed.\n\t * @description Sets the speed at which dialogue is \"typed\" out in the\n\t * dialogue box.\n\t * @access private\n\t * @param {number} setting 0/1/2/3 as Off/Slow/Mid/Fast respectively.\n\t */\n\tfunction setDialogueSpeed(setting) {\n\t\tswitch (setting) {\n\t\t\tcase 0: // Off\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.disableTextCrawl();\n\t\t\t\tbreak;\n\t\t\tcase 1: // Slow\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableTextCrawl();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setTextCrawlSpeed(80);\n\t\t\t\tbreak;\n\t\t\tcase 2: // Mid\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableTextCrawl();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setTextCrawlSpeed(40);\n\t\t\t\tbreak;\n\t\t\tcase 3: // Fast\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableTextCrawl();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setTextCrawlSpeed(30);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tArray.from(document.getElementById(dialId).children).forEach((child) => {\n\t\t\tchild.classList.remove('selected');\n\t\t});\n\t\tdocument.getElementById(dialId).children[setting].classList.add('selected');\n\t}\n\n\t/** @function setSpeechRate\n\t * @summary Set the voice speech rate.\n\t * @access private\n\t * @param {number} setting 0/1/2/3 as Off/Slow/Mid/Fast respectively.\n\t */\n\tfunction setSpeechRate(setting) {\n\t\tswitch (setting) {\n\t\t\tcase 0: // Off\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.disableSpeech();\n\t\t\t\tbreak;\n\t\t\tcase 1: // Slow\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableSpeech();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setSpeechRate(0.5);\n\t\t\t\tbreak;\n\t\t\tcase 2: // Mid\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableSpeech();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setSpeechRate(1);\n\t\t\t\tbreak;\n\t\t\tcase 3: // Fast\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.enableSpeech();\n\t\t\t\t_DialogueManager_js__WEBPACK_IMPORTED_MODULE_0__.DialogueManager.setSpeechRate(1.5);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tArray.from(document.getElementById(spchId).children).forEach((child) => {\n\t\t\tchild.classList.remove('selected');\n\t\t});\n\t\tdocument.getElementById(spchId).children[setting].classList.add('selected');\n\t}\n\n\t/* ---------------- */\n\t/*                  */\n\t/*     FINALIZE     */\n\t/*                  */\n\t/* ---------------- */\n\n\tinit();\n})();\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/settings.js?");

/***/ }),

/***/ "./src/widgets.js":
/*!************************!*\
  !*** ./src/widgets.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exampleWidget\": () => (/* binding */ exampleWidget),\n/* harmony export */   \"binaryWidget\": () => (/* binding */ binaryWidget),\n/* harmony export */   \"binaryConvertWidget\": () => (/* binding */ binaryConvertWidget)\n/* harmony export */ });\n/*\n * All widgets must have the following:\n *\n * 1. A setLevel() function - When a level object is created, a widget is\n * assigned to it, and in the process it must tell the widget what it is so that\n * the widget may call it's submit() function for progression through the level.\n *\n * 2. A generateHtml() function - When a level object is selected by the\n * gameplayManager and the player is moved to the gameplay state, this function\n * is called by the level to generate the html it requires to run.\n *\n * 3. A call to their level's submit() function - This is how the\n * widget communicates information to the level. It can be of any type and is\n * expected to match the individual values set to the level's progression\n * requirements when it's made to progress through the stages of the level, and\n * ultimately to complete it.\n */\n\nconst exampleWidget = function () {\n\tlet _level = null;\n\n\t/**\n\t * Sets the widget's owner level.\n\t * @param {any} level The owner level.\n\t */\n\tfunction setLevel(level) {\n\t\t_level = level;\n\t}\n\n\t/**\n\t * Generates the html of the widget. Used by it's owner level.\n\t */\n\tfunction generateHtml() {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.id = 'example-widget-container';\n\n\t\tconst inputField = document.createElement('input');\n\t\tinputField.id = 'example-widget-input-field';\n\n\t\tconst submitButton = document.createElement('div');\n\t\tsubmitButton.id = 'example-widget-submit-button';\n\t\tsubmitButton.innerText = 'Submit';\n\t\tsubmitButton.onclick = () => {\n\t\t\tsubmit();\n\t\t};\n\n\t\tcontainer.appendChild(inputField);\n\t\tcontainer.appendChild(submitButton);\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Submits the input field's data to the level to attempt progression.\n\t */\n\tfunction submit() {\n\t\tconst submission = document.getElementById(\n\t\t\t'example-widget-input-field'\n\t\t).value;\n\t\t_level.submit(submission);\n\t}\n\n\treturn {\n\t\tgenerateHtml,\n\t\tsetLevel,\n\t};\n};\n\nconst binaryWidget = function () {\n\tlet _level = null;\n\tconst totalDigits = 8;\n\n\tfunction setLevel(level) {\n\t\t_level = level;\n\t}\n\n\tfunction generateHtml() {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.id = 'binary-widget-container';\n\n\t\tconst valueDisplay = document.createElement('div');\n\t\tvalueDisplay.id = 'binary-widget-value-display';\n\t\tvalueDisplay.innerText = '0';\n\n\t\tconst toggleDigits = document.createElement('div');\n\t\ttoggleDigits.id = 'binary-widget-toggle-digits';\n\n\t\tconst submitButton = document.createElement('div');\n\t\tsubmitButton.id = 'binary-widget-submit-button';\n\t\tsubmitButton.innerText = 'Submit';\n\t\tsubmitButton.onclick = () => {\n\t\t\tsubmit();\n\t\t};\n\n\t\tcontainer.appendChild(valueDisplay);\n\t\tcontainer.appendChild(toggleDigits);\n\t\tcontainer.appendChild(submitButton);\n\n\t\tfor (let i = 0; i < totalDigits; i++) {\n\t\t\tlet digitContainer = document.createElement('div');\n\t\t\tlet plus = document.createElement('button');\n\t\t\tlet digit = document.createElement('div');\n\t\t\tlet minus = document.createElement('button');\n\n\t\t\tdigitContainer.classList.add('digit-container');\n\t\t\tdigit.classList.add('digit');\n\n\t\t\tplus.innerText = '+';\n\t\t\tdigit.innerText = '0';\n\t\t\tminus.innerText = '-';\n\n\t\t\tdigitContainer.appendChild(plus);\n\t\t\tdigitContainer.appendChild(digit);\n\t\t\tdigitContainer.appendChild(minus);\n\t\t\ttoggleDigits.appendChild(digitContainer);\n\n\t\t\tplus.addEventListener('click', () => {\n\t\t\t\tif (digit.innerText === '0') {\n\t\t\t\t\tbinaryArr[i] = 1;\n\t\t\t\t\tdigit.innerText = '1';\n\t\t\t\t\tdisplayDec();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tminus.addEventListener('click', () => {\n\t\t\t\tif (digit.innerText === '1') {\n\t\t\t\t\tbinaryArr[i] = 0;\n\t\t\t\t\tdigit.innerText = '0';\n\t\t\t\t\tdisplayDec();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn container;\n\t}\n\n\tlet binaryArr = (() => {\n\t\tlet nums = [];\n\t\tfor (let i = 0; i < totalDigits; i++) {\n\t\t\tnums.push(0);\n\t\t}\n\t\treturn nums;\n\t})();\n\n\tfunction displayDec() {\n\t\tconst val = document.getElementById('binary-widget-value-display');\n\t\tval.innerText = parseInt(binaryArr.join(''), 2);\n\t}\n\n\tfunction submit() {\n\t\tconst submission = parseInt(binaryArr.join(''), 2);\n\t\t_level.submit(submission);\n\t}\n\n\treturn {\n\t\tgenerateHtml,\n\t\tsetLevel,\n\t};\n};\n\nconst binaryConvertWidget = function () {\n\tlet _level = null;\n\n\tfunction setLevel(level) {\n\t\t_level = level;\n\t}\n\n\tfunction generateHtml() {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.id = 'convert-widget-container';\n\n\t\tconst input = document.createElement('input');\n\t\tinput.id = 'convert-widget-input';\n\t\tinput.placeholder = 'Text to binary';\n\n\t\tconst output = document.createElement('div');\n\t\toutput.id = 'convert-widget-output';\n\n\t\tconst submitButton = document.createElement('div');\n\t\tsubmitButton.id = 'binary-widget-submit-button';\n\t\tsubmitButton.innerText = 'Submit';\n\t\tsubmitButton.onclick = () => {\n\t\t\tsubmit();\n\t\t};\n\n\t\tcontainer.appendChild(input);\n\t\tcontainer.appendChild(output);\n\t\tcontainer.appendChild(submitButton);\n\n\t\tinput.addEventListener('input', () => {\n\t\t\tconst binary = input.value;\n\t\t\toutput.innerText = textToBinary(binary);\n\t\t});\n\n\t\treturn container;\n\t}\n\n\tfunction textToBinary(text) {\n\t\tlet output = '';\n\t\tfor (let i = 0; i < text.length; i++) {\n\t\t\toutput += text.charCodeAt(i).toString(2) + ' ';\n\t\t}\n\t\treturn output.trim();\n\t}\n\n\tfunction submit() {\n\t\tconst submission = document.getElementById('convert-widget-input').value;\n\t\tconsole.log(submission);\n\t\t_level.submit(submission);\n\t}\n\n\treturn {\n\t\tgenerateHtml,\n\t\tsetLevel,\n\t};\n};\n\n\n\n\n//# sourceURL=webpack://gamejam/./src/widgets.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;